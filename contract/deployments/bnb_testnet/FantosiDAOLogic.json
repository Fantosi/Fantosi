{
  "address": "0xcd916b963717edaE1D946Cc01EFD747b8E1052Bc",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "timelock_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "fantosiToken_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vetoer_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "votingPeriod_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votingDelay_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "proposalThresholdBPS_",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "minQuorumVotesBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxQuorumVotesBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint32",
              "name": "quorumCoefficient",
              "type": "uint32"
            }
          ],
          "internalType": "struct FantosiDAOStorageV2.DynamicQuorumParams",
          "name": "dynamicQuorumParams_",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AdminOnly",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CantCancelExecutedProposal",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CantVetoExecutedProposal",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidMaxQuorumVotesBPS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidMinQuorumVotesBPS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MinQuorumBPSGreaterThanMaxQuorumBPS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PendingVetoerOnly",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsafeUint16Cast",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VetoerBurned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VetoerOnly",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "oldMaxQuorumVotesBPS",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "newMaxQuorumVotesBPS",
          "type": "uint16"
        }
      ],
      "name": "MaxQuorumVotesBPSSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "oldMinQuorumVotesBPS",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "newMinQuorumVotesBPS",
          "type": "uint16"
        }
      ],
      "name": "MinQuorumVotesBPSSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "NewImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingVetoer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingVetoer",
          "type": "address"
        }
      ],
      "name": "NewPendingVetoer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldVetoer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newVetoer",
          "type": "address"
        }
      ],
      "name": "NewVetoer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "sendValues",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "sendValues",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quorumVotes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreatedWithRequirements",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldProposalThresholdBPS",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newProposalThresholdBPS",
          "type": "uint256"
        }
      ],
      "name": "ProposalThresholdBPSSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalVetoed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "oldQuorumCoefficient",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newQuorumCoefficient",
          "type": "uint32"
        }
      ],
      "name": "QuorumCoefficientSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldQuorumVotesBPS",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newQuorumVotesBPS",
          "type": "uint256"
        }
      ],
      "name": "QuorumVotesBPSSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refundAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "refundSent",
          "type": "bool"
        }
      ],
      "name": "RefundableVote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "VotingDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "VotingPeriodSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "sent",
          "type": "bool"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PROPOSAL_THRESHOLD_BPS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_QUORUM_VOTES_BPS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_QUORUM_VOTES_BPS_UPPER_BOUND",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_REFUND_BASE_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_REFUND_GAS_USED",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_REFUND_PRIORITY_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_VOTING_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_VOTING_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_PROPOSAL_THRESHOLD_BPS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_QUORUM_VOTES_BPS_LOWER_BOUND",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_QUORUM_VOTES_BPS_UPPER_BOUND",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VOTING_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VOTING_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REFUND_BASE_GAS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_acceptAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_acceptVetoer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_burnVetoPower",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "newMinQuorumVotesBPS",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "newMaxQuorumVotesBPS",
          "type": "uint16"
        },
        {
          "internalType": "uint32",
          "name": "newQuorumCoefficient",
          "type": "uint32"
        }
      ],
      "name": "_setDynamicQuorumParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "newMaxQuorumVotesBPS",
          "type": "uint16"
        }
      ],
      "name": "_setMaxQuorumVotesBPS",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "newMinQuorumVotesBPS",
          "type": "uint16"
        }
      ],
      "name": "_setMinQuorumVotesBPS",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "_setPendingAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingVetoer",
          "type": "address"
        }
      ],
      "name": "_setPendingVetoer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newProposalThresholdBPS",
          "type": "uint256"
        }
      ],
      "name": "_setProposalThresholdBPS",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "newQuorumCoefficient",
          "type": "uint32"
        }
      ],
      "name": "_setQuorumCoefficient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "_setVotingDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "_setVotingPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        }
      ],
      "name": "castRefundableVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "castRefundableVoteWithReason",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "castVoteWithReason",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "minQuorumVotesBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxQuorumVotesBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint32",
              "name": "quorumCoefficient",
              "type": "uint32"
            }
          ],
          "internalType": "struct FantosiDAOStorageV2.DynamicQuorumParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "dynamicQuorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fantosiToken",
      "outputs": [
        {
          "internalType": "contract FantosiTokenLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "sendValues",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber_",
          "type": "uint256"
        }
      ],
      "name": "getDynamicQuorumParamsAt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "minQuorumVotesBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxQuorumVotesBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint32",
              "name": "quorumCoefficient",
              "type": "uint32"
            }
          ],
          "internalType": "struct FantosiDAOStorageV2.DynamicQuorumParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ],
          "internalType": "struct FantosiDAOStorageV1Adjusted.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxQuorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minQuorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingVetoer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalMaxOperations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThresholdBPS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "proposalThreshold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quorumVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "eta",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "abstainVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "canceled",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "vetoed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creationBlock",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "sendValues",
              "type": "uint256[]"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "state",
              "type": "string"
            }
          ],
          "internalType": "struct FantosiDAOStorageV2.ProposalCondensed",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "sendValues",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "quorumParamsCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "fromBlock",
          "type": "uint32"
        },
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "minQuorumVotesBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxQuorumVotesBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint32",
              "name": "quorumCoefficient",
              "type": "uint32"
            }
          ],
          "internalType": "struct FantosiDAOStorageV2.DynamicQuorumParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumVotesBPS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract IFantosiDAOExecutor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "veto",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vetoer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x838ada8cd186c5f85c44642408cca0a30fa205964645f24b53421dccc77e7268",
  "receipt": {
    "to": null,
    "from": "0x0934D78959e4b25C7A263aCAe02077b277d57771",
    "contractAddress": "0xcd916b963717edaE1D946Cc01EFD747b8E1052Bc",
    "transactionIndex": 0,
    "gasUsed": "5127712",
    "logsBloom": "0x
    "blockHash": "0x4d95cdab6ac36ca0b2d40e4479755fb9d417a37296b10e6f190929a6dd2275db",
    "transactionHash": "0x838ada8cd186c5f85c44642408cca0a30fa205964645f24b53421dccc77e7268",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 25566174,
        "transactionHash": "0x838ada8cd186c5f85c44642408cca0a30fa205964645f24b53421dccc77e7268",
        "address": "0xcd916b963717edaE1D946Cc01EFD747b8E1052Bc",
        "topics": [
          "0x7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007080",
        "logIndex": 0,
        "blockHash": "0x4d95cdab6ac36ca0b2d40e4479755fb9d417a37296b10e6f190929a6dd2275db"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 25566174,
        "transactionHash": "0x838ada8cd186c5f85c44642408cca0a30fa205964645f24b53421dccc77e7268",
        "address": "0xcd916b963717edaE1D946Cc01EFD747b8E1052Bc",
        "topics": [
          "0xc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 1,
        "blockHash": "0x4d95cdab6ac36ca0b2d40e4479755fb9d417a37296b10e6f190929a6dd2275db"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 25566174,
        "transactionHash": "0x838ada8cd186c5f85c44642408cca0a30fa205964645f24b53421dccc77e7268",
        "address": "0xcd916b963717edaE1D946Cc01EFD747b8E1052Bc",
        "topics": [
          "0xfc216faa269bf440fb06aa490693f409461bde9cdcb949c7b9f2cb79589e7a58"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001f4",
        "logIndex": 2,
        "blockHash": "0x4d95cdab6ac36ca0b2d40e4479755fb9d417a37296b10e6f190929a6dd2275db"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 25566174,
        "transactionHash": "0x838ada8cd186c5f85c44642408cca0a30fa205964645f24b53421dccc77e7268",
        "address": "0xcd916b963717edaE1D946Cc01EFD747b8E1052Bc",
        "topics": [
          "0xfaeebe30d875e399189096ea49fea81bd41fe6dfc86ad3550639063219e60778"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e8",
        "logIndex": 3,
        "blockHash": "0x4d95cdab6ac36ca0b2d40e4479755fb9d417a37296b10e6f190929a6dd2275db"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 25566174,
        "transactionHash": "0x838ada8cd186c5f85c44642408cca0a30fa205964645f24b53421dccc77e7268",
        "address": "0xcd916b963717edaE1D946Cc01EFD747b8E1052Bc",
        "topics": [
          "0x4bfb1235074b38f02e5cf8ba90f535905417c196a12654f65ee0584512d70642"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007d0",
        "logIndex": 4,
        "blockHash": "0x4d95cdab6ac36ca0b2d40e4479755fb9d417a37296b10e6f190929a6dd2275db"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 25566174,
        "transactionHash": "0x838ada8cd186c5f85c44642408cca0a30fa205964645f24b53421dccc77e7268",
        "address": "0xcd916b963717edaE1D946Cc01EFD747b8E1052Bc",
        "topics": [
          "0x5e3adb1066359dafa23c629f245d93543856115700821dcb4debc416f393c469"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 5,
        "blockHash": "0x4d95cdab6ac36ca0b2d40e4479755fb9d417a37296b10e6f190929a6dd2275db"
      }
    ],
    "blockNumber": 25566174,
    "cumulativeGasUsed": "5127712",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6D66a749d3551C8250244581bD96bAb187616Dc5",
    "0x131aaA1fea788d68B6a1365aB089F7854B9D3255",
    "0x3A6528E50DB65Ac99555DD45C16a14853Db0F48a",
    "0x6D66a749d3551C8250244581bD96bAb187616Dc5",
    "28800",
    "1",
    "500",
    {
      "minQuorumVotesBPS": "1000",
      "maxQuorumVotesBPS": "2000",
      "quorumCoefficient": "1"
    }
  ],
  "numDeployments": 1,
  "solcInputHash": "8b0b3ccb09365db3875b6474a6286e03",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"timelock_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fantosiToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vetoer_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingDelay_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalThresholdBPS_\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"minQuorumVotesBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxQuorumVotesBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"quorumCoefficient\",\"type\":\"uint32\"}],\"internalType\":\"struct FantosiDAOStorageV2.DynamicQuorumParams\",\"name\":\"dynamicQuorumParams_\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AdminOnly\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantCancelExecutedProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantVetoExecutedProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxQuorumVotesBPS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinQuorumVotesBPS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinQuorumBPSGreaterThanMaxQuorumBPS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingVetoerOnly\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeUint16Cast\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VetoerBurned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VetoerOnly\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"oldMaxQuorumVotesBPS\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newMaxQuorumVotesBPS\",\"type\":\"uint16\"}],\"name\":\"MaxQuorumVotesBPSSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"oldMinQuorumVotesBPS\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newMinQuorumVotesBPS\",\"type\":\"uint16\"}],\"name\":\"MinQuorumVotesBPSSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingVetoer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingVetoer\",\"type\":\"address\"}],\"name\":\"NewPendingVetoer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldVetoer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newVetoer\",\"type\":\"address\"}],\"name\":\"NewVetoer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"sendValues\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"sendValues\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quorumVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreatedWithRequirements\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldProposalThresholdBPS\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProposalThresholdBPS\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdBPSSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalVetoed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldQuorumCoefficient\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newQuorumCoefficient\",\"type\":\"uint32\"}],\"name\":\"QuorumCoefficientSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldQuorumVotesBPS\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuorumVotesBPS\",\"type\":\"uint256\"}],\"name\":\"QuorumVotesBPSSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"refundSent\",\"type\":\"bool\"}],\"name\":\"RefundableVote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"sent\",\"type\":\"bool\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PROPOSAL_THRESHOLD_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_QUORUM_VOTES_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_QUORUM_VOTES_BPS_UPPER_BOUND\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_REFUND_BASE_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_REFUND_GAS_USED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_REFUND_PRIORITY_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_VOTING_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PROPOSAL_THRESHOLD_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_QUORUM_VOTES_BPS_LOWER_BOUND\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_QUORUM_VOTES_BPS_UPPER_BOUND\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTING_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REFUND_BASE_GAS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_acceptAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_acceptVetoer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_burnVetoPower\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newMinQuorumVotesBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"newMaxQuorumVotesBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"newQuorumCoefficient\",\"type\":\"uint32\"}],\"name\":\"_setDynamicQuorumParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newMaxQuorumVotesBPS\",\"type\":\"uint16\"}],\"name\":\"_setMaxQuorumVotesBPS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newMinQuorumVotesBPS\",\"type\":\"uint16\"}],\"name\":\"_setMinQuorumVotesBPS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setPendingAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingVetoer\",\"type\":\"address\"}],\"name\":\"_setPendingVetoer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProposalThresholdBPS\",\"type\":\"uint256\"}],\"name\":\"_setProposalThresholdBPS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"newQuorumCoefficient\",\"type\":\"uint32\"}],\"name\":\"_setQuorumCoefficient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"_setVotingDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"_setVotingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castRefundableVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castRefundableVoteWithReason\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"minQuorumVotesBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxQuorumVotesBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"quorumCoefficient\",\"type\":\"uint32\"}],\"internalType\":\"struct FantosiDAOStorageV2.DynamicQuorumParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"dynamicQuorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fantosiToken\",\"outputs\":[{\"internalType\":\"contract FantosiTokenLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"sendValues\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber_\",\"type\":\"uint256\"}],\"name\":\"getDynamicQuorumParamsAt\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"minQuorumVotesBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxQuorumVotesBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"quorumCoefficient\",\"type\":\"uint32\"}],\"internalType\":\"struct FantosiDAOStorageV2.DynamicQuorumParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"internalType\":\"struct FantosiDAOStorageV1Adjusted.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxQuorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minQuorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingVetoer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalMaxOperations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThresholdBPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposalThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quorumVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vetoed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationBlock\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"sendValues\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"}],\"internalType\":\"struct FantosiDAOStorageV2.ProposalCondensed\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"sendValues\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"quorumParamsCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"minQuorumVotesBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxQuorumVotesBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"quorumCoefficient\",\"type\":\"uint32\"}],\"internalType\":\"struct FantosiDAOStorageV2.DynamicQuorumParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumVotesBPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract IFantosiDAOExecutor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"veto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vetoer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AdminOnly()\":[{\"details\":\"Introduced these errors to reduce contract size, to avoid deployment failure\"}]},\"kind\":\"dev\",\"methods\":{\"_acceptAdmin()\":{\"details\":\"Admin function for pending admin to accept role and update admin\"},\"_burnVetoPower()\":{\"details\":\"Vetoer function destroying veto power forever\"},\"_setDynamicQuorumParams(uint16,uint16,uint32)\":{\"params\":{\"newMaxQuorumVotesBPS\":\"maximum quorum votes bps     Must be lower than `MAX_QUORUM_VOTES_BPS_UPPER_BOUND`     Must be higher than or equal to minQuorumVotesBPS\",\"newMinQuorumVotesBPS\":\"minimum quorum votes bps     Must be between `MIN_QUORUM_VOTES_BPS_LOWER_BOUND` and `MIN_QUORUM_VOTES_BPS_UPPER_BOUND`     Must be lower than or equal to maxQuorumVotesBPS\",\"newQuorumCoefficient\":\"the new coefficient, as a fixed point integer with 6 decimals\"}},\"_setMaxQuorumVotesBPS(uint16)\":{\"params\":{\"newMaxQuorumVotesBPS\":\"maximum quorum votes bps     Must be lower than `MAX_QUORUM_VOTES_BPS_UPPER_BOUND`     Must be higher than or equal to minQuorumVotesBPS\"}},\"_setMinQuorumVotesBPS(uint16)\":{\"params\":{\"newMinQuorumVotesBPS\":\"minimum quorum votes bps     Must be between `MIN_QUORUM_VOTES_BPS_LOWER_BOUND` and `MIN_QUORUM_VOTES_BPS_UPPER_BOUND`     Must be lower than or equal to maxQuorumVotesBPS\"}},\"_setPendingAdmin(address)\":{\"details\":\"Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\",\"params\":{\"newPendingAdmin\":\"New pending admin.\"}},\"_setPendingVetoer(address)\":{\"params\":{\"newPendingVetoer\":\"New Pending Vetoer\"}},\"_setProposalThresholdBPS(uint256)\":{\"details\":\"newProposalThresholdBPS must be greater than the hardcoded min\",\"params\":{\"newProposalThresholdBPS\":\"new proposal threshold\"}},\"_setQuorumCoefficient(uint32)\":{\"params\":{\"newQuorumCoefficient\":\"the new coefficient, as a fixed point integer with 6 decimals\"}},\"_setVotingDelay(uint256)\":{\"params\":{\"newVotingDelay\":\"new voting delay, in blocks\"}},\"_setVotingPeriod(uint256)\":{\"params\":{\"newVotingPeriod\":\"new voting period, in blocks\"}},\"cancel(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to cancel\"}},\"castRefundableVote(uint256,uint8)\":{\"details\":\"Reentrancy is defended against in `castVoteInternal` at the `receipt.hasVoted == false` require statement.\",\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"castRefundableVoteWithReason(uint256,uint8,string)\":{\"details\":\"Reentrancy is defended against in `castVoteInternal` at the `receipt.hasVoted == false` require statement.\",\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"reason\":\"The reason given for the vote by the voter\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"castVote(uint256,uint8)\":{\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"External function that accepts EIP-712 signatures for voting on proposals.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"reason\":\"The reason given for the vote by the voter\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"constructor\":{\"params\":{\"dynamicQuorumParams_\":\"The initial dynamic quorum parameters\",\"fantosiToken_\":\"The address of the NOUN tokens\",\"proposalThresholdBPS_\":\"The initial proposal threshold in basis points\",\"timelock_\":\"The address of the FantosiDAOExecutor\",\"vetoer_\":\"The address allowed to unilaterally veto proposals\",\"votingDelay_\":\"The initial voting delay\",\"votingPeriod_\":\"The initial voting period\"}},\"dynamicQuorumVotes(uint256,uint256,(uint16,uint16,uint32))\":{\"details\":\"Note the coefficient is a fixed point integer with 6 decimals\",\"params\":{\"againstVotes\":\"Number of against-votes in the proposal\",\"params\":\"Configurable parameters for calculating the quorum based on againstVotes. See `DynamicQuorumParams` definition for additional details.\",\"totalSupply\":\"The total supply of Nouns at the time of proposal creation\"},\"returns\":{\"_0\":\"quorumVotes The required quorum\"}},\"execute(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to execute\"}},\"getActions(uint256)\":{\"params\":{\"proposalId\":\"the id of the proposal\"},\"returns\":{\"calldatas\":\"calldatas\",\"sendValues\":\"sendValues\",\"signatures\":\"signatures\",\"targets\":\"targets\"}},\"getDynamicQuorumParamsAt(uint256)\":{\"details\":\"The checkpoints array must not be empty, and the block number must be higher than or equal to     the block of the first checkpoint\",\"params\":{\"blockNumber_\":\"the block number to get the params at\"},\"returns\":{\"_0\":\"The dynamic quorum parameters that were set at the given block number\"}},\"getReceipt(uint256,address)\":{\"params\":{\"proposalId\":\"the id of proposal\",\"voter\":\"The address of the voter\"},\"returns\":{\"_0\":\"The voting receipt\"}},\"proposals(uint256)\":{\"params\":{\"proposalId\":\"the proposal id to get the data for\"},\"returns\":{\"_0\":\"A `ProposalCondensed` struct with the proposal data\"}},\"propose(address[],uint256[],string[],bytes[],string)\":{\"params\":{\"calldatas\":\"Calldatas for proposal calls\",\"description\":\"String description of the proposal\",\"sendValues\":\"Eth values for proposal calls\",\"signatures\":\"Function signatures for proposal calls\",\"targets\":\"Target addresses for proposal calls\"},\"returns\":{\"_0\":\"Proposal id of new proposal\"}},\"queue(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to queue\"}},\"state(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal\"},\"returns\":{\"_0\":\"Proposal state\"}},\"veto(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to veto\"}}},\"version\":1},\"userdoc\":{\"events\":{\"MaxQuorumVotesBPSSet(uint16,uint16)\":{\"notice\":\"Emitted when maxQuorumVotesBPS is set\"},\"MinQuorumVotesBPSSet(uint16,uint16)\":{\"notice\":\"Emitted when minQuorumVotesBPS is set\"},\"NewAdmin(address,address)\":{\"notice\":\"Emitted when pendingAdmin is accepted, which means admin is updated\"},\"NewImplementation(address,address)\":{\"notice\":\"Emitted when implementation is changed\"},\"NewPendingAdmin(address,address)\":{\"notice\":\"Emitted when pendingAdmin is changed\"},\"NewPendingVetoer(address,address)\":{\"notice\":\"Emitted when pendingVetoer is changed\"},\"NewVetoer(address,address)\":{\"notice\":\"Emitted when vetoer is changed\"},\"ProposalCanceled(uint256)\":{\"notice\":\"An event emitted when a proposal has been canceled\"},\"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)\":{\"notice\":\"An event emitted when a new proposal is created\"},\"ProposalCreatedWithRequirements(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,uint256,uint256,string)\":{\"notice\":\"An event emitted when a new proposal is created, which includes additional information\"},\"ProposalExecuted(uint256)\":{\"notice\":\"An event emitted when a proposal has been executed in the FantosiDAOExecutor\"},\"ProposalQueued(uint256,uint256)\":{\"notice\":\"An event emitted when a proposal has been queued in the FantosiDAOExecutor\"},\"ProposalThresholdBPSSet(uint256,uint256)\":{\"notice\":\"Emitted when proposal threshold basis points is set\"},\"ProposalVetoed(uint256)\":{\"notice\":\"An event emitted when a proposal has been vetoed by vetoAddress\"},\"QuorumCoefficientSet(uint32,uint32)\":{\"notice\":\"Emitted when quorumCoefficient is set\"},\"QuorumVotesBPSSet(uint256,uint256)\":{\"notice\":\"Emitted when quorum votes basis points is set\"},\"RefundableVote(address,uint256,bool)\":{\"notice\":\"Emitted when a voter cast a vote requesting a gas refund.\"},\"VoteCast(address,uint256,uint8,uint256,string)\":{\"notice\":\"An event emitted when a vote has been cast on a proposal\"},\"VotingDelaySet(uint256,uint256)\":{\"notice\":\"An event emitted when the voting delay is set\"},\"VotingPeriodSet(uint256,uint256)\":{\"notice\":\"An event emitted when the voting period is set\"},\"Withdraw(uint256,bool)\":{\"notice\":\"Emitted when admin withdraws the DAO's balance.\"}},\"kind\":\"user\",\"methods\":{\"BALLOT_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the ballot struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"MAX_PROPOSAL_THRESHOLD_BPS()\":{\"notice\":\"The maximum setable proposal threshold\"},\"MAX_QUORUM_VOTES_BPS()\":{\"notice\":\"The maximum setable quorum votes basis points\"},\"MAX_QUORUM_VOTES_BPS_UPPER_BOUND()\":{\"notice\":\"The upper bound of maximum quorum votes basis points\"},\"MAX_REFUND_BASE_FEE()\":{\"notice\":\"The maximum basefee the DAO will refund voters on\"},\"MAX_REFUND_GAS_USED()\":{\"notice\":\"The maximum gas units the DAO will refund voters on; supports about 9,190 characters\"},\"MAX_REFUND_PRIORITY_FEE()\":{\"notice\":\"The maximum priority fee used to cap gas refunds in `castRefundableVote`\"},\"MAX_VOTING_DELAY()\":{\"notice\":\"The max setable voting delay\"},\"MAX_VOTING_PERIOD()\":{\"notice\":\"The max setable voting period\"},\"MIN_PROPOSAL_THRESHOLD_BPS()\":{\"notice\":\"The minimum setable proposal threshold\"},\"MIN_QUORUM_VOTES_BPS_LOWER_BOUND()\":{\"notice\":\"The lower bound of minimum quorum votes basis points\"},\"MIN_QUORUM_VOTES_BPS_UPPER_BOUND()\":{\"notice\":\"The upper bound of minimum quorum votes basis points\"},\"MIN_VOTING_DELAY()\":{\"notice\":\"The min setable voting delay\"},\"MIN_VOTING_PERIOD()\":{\"notice\":\"The minimum setable voting period\"},\"REFUND_BASE_GAS()\":{\"notice\":\"The vote refund gas overhead, including 7K for ETH transfer and 29K for general transaction overhead\"},\"_acceptAdmin()\":{\"notice\":\"Accepts transfer of admin rights. msg.sender must be pendingAdmin\"},\"_burnVetoPower()\":{\"notice\":\"Burns veto priviledges\"},\"_setDynamicQuorumParams(uint16,uint16,uint32)\":{\"notice\":\"Admin function for setting all the dynamic quorum parameters\"},\"_setMaxQuorumVotesBPS(uint16)\":{\"notice\":\"Admin function for setting the maximum quorum votes bps\"},\"_setMinQuorumVotesBPS(uint16)\":{\"notice\":\"Admin function for setting the minimum quorum votes bps\"},\"_setPendingAdmin(address)\":{\"notice\":\"Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\"},\"_setPendingVetoer(address)\":{\"notice\":\"Begins transition of vetoer. The newPendingVetoer must call _acceptVetoer to finalize the transfer.\"},\"_setProposalThresholdBPS(uint256)\":{\"notice\":\"Admin function for setting the proposal threshold basis points\"},\"_setQuorumCoefficient(uint32)\":{\"notice\":\"Admin function for setting the dynamic quorum coefficient\"},\"_setVotingDelay(uint256)\":{\"notice\":\"Admin function for setting the voting delay\"},\"_setVotingPeriod(uint256)\":{\"notice\":\"Admin function for setting the voting period\"},\"admin()\":{\"notice\":\"Administrator for this contract\"},\"cancel(uint256)\":{\"notice\":\"Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\"},\"castRefundableVote(uint256,uint8)\":{\"notice\":\"Cast a vote for a proposal, asking the DAO to refund gas costs. Users with > 0 votes receive refunds. Refunds are partial when using a gas priority fee higher than the DAO's cap. Refunds are partial when the DAO's balance is insufficient. No refund is sent when the DAO's balance is empty. No refund is sent to users with no votes. Voting takes place regardless of refund success.\"},\"castRefundableVoteWithReason(uint256,uint8,string)\":{\"notice\":\"Cast a vote for a proposal, asking the DAO to refund gas costs. Users with > 0 votes receive refunds. Refunds are partial when using a gas priority fee higher than the DAO's cap. Refunds are partial when the DAO's balance is insufficient. No refund is sent when the DAO's balance is empty. No refund is sent to users with no votes. Voting takes place regardless of refund success.\"},\"castVote(uint256,uint8)\":{\"notice\":\"Cast a vote for a proposal\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"notice\":\"Cast a vote for a proposal by signature\"},\"castVoteWithReason(uint256,uint8,string)\":{\"notice\":\"Cast a vote for a proposal with a reason\"},\"constructor\":{\"notice\":\"Used to initialize the contract during delegator contructor\"},\"dynamicQuorumVotes(uint256,uint256,(uint16,uint16,uint32))\":{\"notice\":\"Calculates the required quorum of for-votes based on the amount of against-votes     The more against-votes there are for a proposal, the higher the required quorum is.     The quorum BPS is between `params.minQuorumVotesBPS` and params.maxQuorumVotesBPS.     The additional quorum is calculated as:       quorumCoefficient * againstVotesBPS\"},\"execute(uint256)\":{\"notice\":\"Executes a queued proposal if eta has passed\"},\"fantosiToken()\":{\"notice\":\"The address of the Nouns tokens\"},\"getActions(uint256)\":{\"notice\":\"Gets actions of a proposal\"},\"getDynamicQuorumParamsAt(uint256)\":{\"notice\":\"returns the dynamic quorum parameters values at a certain block number\"},\"getReceipt(uint256,address)\":{\"notice\":\"Gets the receipt for a voter on a given proposal\"},\"implementation()\":{\"notice\":\"Active brains of Governor\"},\"latestProposalIds(address)\":{\"notice\":\"The latest proposal for each proposer\"},\"maxQuorumVotes()\":{\"notice\":\"Current max quorum votes using Noun total supply\"},\"minQuorumVotes()\":{\"notice\":\"Current min quorum votes using Noun total supply\"},\"name()\":{\"notice\":\"The name of this contract\"},\"pendingAdmin()\":{\"notice\":\"Pending administrator for this contract\"},\"pendingVetoer()\":{\"notice\":\"Pending new vetoer\"},\"proposalCount()\":{\"notice\":\"The total number of proposals\"},\"proposalMaxOperations()\":{\"notice\":\"The maximum number of actions that can be included in a proposal\"},\"proposalThreshold()\":{\"notice\":\"Current proposal threshold using Noun Total Supply Differs from `GovernerBravo` which uses fixed amount\"},\"proposalThresholdBPS()\":{\"notice\":\"The basis point number of votes required in order for a voter to become a proposer. *DIFFERS from GovernerBravo\"},\"proposals(uint256)\":{\"notice\":\"Returns the proposal details given a proposal id.     The `quorumVotes` member holds the *current* quorum, given the current votes.\"},\"propose(address[],uint256[],string[],bytes[],string)\":{\"notice\":\"Function used to propose a new proposal. Sender must have delegates above the proposal threshold\"},\"queue(uint256)\":{\"notice\":\"Queues a proposal of state succeeded\"},\"quorumVotes(uint256)\":{\"notice\":\"Quorum votes required for a specific proposal to succeed Differs from `GovernerBravo` which uses fixed amount\"},\"quorumVotesBPS()\":{\"notice\":\"The basis point number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed. *DIFFERS from GovernerBravo\"},\"state(uint256)\":{\"notice\":\"Gets the state of a proposal\"},\"timelock()\":{\"notice\":\"The address of the Nouns DAO Executor FantosiDAOExecutor\"},\"veto(uint256)\":{\"notice\":\"Vetoes a proposal only if sender is the vetoer and the proposal has not been executed.\"},\"vetoer()\":{\"notice\":\"Vetoer who has the ability to veto any proposal\"},\"votingDelay()\":{\"notice\":\"The delay before voting on a proposal may take place, once proposed, in blocks\"},\"votingPeriod()\":{\"notice\":\"The duration of voting on a proposal, in blocks\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/governance/FantosiDAOLogic.sol\":\"FantosiDAOLogic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\"},\"src/governance/FantosiDAOInterfaces.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\n\\n/// @title Nouns DAO Logic interfaces and events\\n\\n/*********************************\\n * \\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2588\\u2588\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2588\\u2588\\u2591\\u2591\\u2588\\u2588\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2588\\u2588\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2588\\u2588\\u2591\\u2591\\u2588\\u2588\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2588\\u2588\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591 *\\n *********************************/\\n\\n// LICENSE\\n// FantosiDAOInterfaces.sol is a modified version of Compound Lab's GovernorBravoInterfaces.sol:\\n// https://github.com/compound-finance/compound-protocol/blob/b9b14038612d846b83f8a009a82c38974ff2dcfe/contracts/Governance/GovernorBravoInterfaces.sol\\n//\\n// GovernorBravoInterfaces.sol source code Copyright 2020 Compound Labs, Inc. licensed under the BSD-3-Clause license.\\n// With modifications by Nounders DAO.\\n//\\n// Additional conditions of BSD-3-Clause can be found here: https://opensource.org/licenses/BSD-3-Clause\\n//\\n// MODIFICATIONS\\n// FantosiDAOEvents, FantosiDAOProxyStorage, FantosiDAOStorageV1 add support for changes made by Nouns DAO to GovernorBravo.sol\\n// See FantosiDAOLogicV1.sol for more details.\\n// FantosiDAOStorageV1Adjusted and FantosiDAOStorageV2 add support for a dynamic vote quorum.\\n// See FantosiDAOLogic.sol for more details.\\n\\npragma solidity ^0.8.6;\\n\\ncontract FantosiDAOEvents {\\n    /// @notice An event emitted when a new proposal is created\\n    event ProposalCreated(\\n        uint256 id,\\n        address proposer,\\n        address[] targets,\\n        uint256[] sendValues,\\n        string[] signatures,\\n        bytes[] calldatas,\\n        uint256 startBlock,\\n        uint256 endBlock,\\n        string description\\n    );\\n\\n    /// @notice An event emitted when a new proposal is created, which includes additional information\\n    event ProposalCreatedWithRequirements(\\n        uint256 id,\\n        address proposer,\\n        address[] targets,\\n        uint256[] sendValues,\\n        string[] signatures,\\n        bytes[] calldatas,\\n        uint256 startBlock,\\n        uint256 endBlock,\\n        uint256 proposalThreshold,\\n        uint256 quorumVotes,\\n        string description\\n    );\\n\\n    /// @notice An event emitted when a vote has been cast on a proposal\\n    /// @param voter The address which casted a vote\\n    /// @param proposalId The proposal id which was voted on\\n    /// @param support Support value for the vote. 0=against, 1=for, 2=abstain\\n    /// @param votes Number of votes which were cast by the voter\\n    /// @param reason The reason given for the vote by the voter\\n    event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 votes, string reason);\\n\\n    /// @notice An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint256 id);\\n\\n    /// @notice An event emitted when a proposal has been queued in the FantosiDAOExecutor\\n    event ProposalQueued(uint256 id, uint256 eta);\\n\\n    /// @notice An event emitted when a proposal has been executed in the FantosiDAOExecutor\\n    event ProposalExecuted(uint256 id);\\n\\n    /// @notice An event emitted when a proposal has been vetoed by vetoAddress\\n    event ProposalVetoed(uint256 id);\\n\\n    /// @notice An event emitted when the voting delay is set\\n    event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay);\\n\\n    /// @notice An event emitted when the voting period is set\\n    event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod);\\n\\n    /// @notice Emitted when implementation is changed\\n    event NewImplementation(address oldImplementation, address newImplementation);\\n\\n    /// @notice Emitted when proposal threshold basis points is set\\n    event ProposalThresholdBPSSet(uint256 oldProposalThresholdBPS, uint256 newProposalThresholdBPS);\\n\\n    /// @notice Emitted when quorum votes basis points is set\\n    event QuorumVotesBPSSet(uint256 oldQuorumVotesBPS, uint256 newQuorumVotesBPS);\\n\\n    /// @notice Emitted when pendingAdmin is changed\\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\n\\n    /// @notice Emitted when pendingAdmin is accepted, which means admin is updated\\n    event NewAdmin(address oldAdmin, address newAdmin);\\n\\n    /// @notice Emitted when vetoer is changed\\n    event NewVetoer(address oldVetoer, address newVetoer);\\n}\\n\\ncontract FantosiDAOEventsV2 is FantosiDAOEvents {\\n    /// @notice Emitted when minQuorumVotesBPS is set\\n    event MinQuorumVotesBPSSet(uint16 oldMinQuorumVotesBPS, uint16 newMinQuorumVotesBPS);\\n\\n    /// @notice Emitted when maxQuorumVotesBPS is set\\n    event MaxQuorumVotesBPSSet(uint16 oldMaxQuorumVotesBPS, uint16 newMaxQuorumVotesBPS);\\n\\n    /// @notice Emitted when quorumCoefficient is set\\n    event QuorumCoefficientSet(uint32 oldQuorumCoefficient, uint32 newQuorumCoefficient);\\n\\n    /// @notice Emitted when a voter cast a vote requesting a gas refund.\\n    event RefundableVote(address indexed voter, uint256 refundAmount, bool refundSent);\\n\\n    /// @notice Emitted when admin withdraws the DAO's balance.\\n    event Withdraw(uint256 amount, bool sent);\\n\\n    /// @notice Emitted when pendingVetoer is changed\\n    event NewPendingVetoer(address oldPendingVetoer, address newPendingVetoer);\\n}\\n\\ncontract FantosiDAOProxyStorage {\\n    /// @notice Administrator for this contract\\n    address public admin;\\n\\n    /// @notice Pending administrator for this contract\\n    address public pendingAdmin;\\n\\n    /// @notice Active brains of Governor\\n    address public implementation;\\n}\\n\\n/**\\n * @title Storage for Governor Bravo Delegate\\n * @notice For future upgrades, do not change FantosiDAOStorageV1. Create a new\\n * contract which implements FantosiDAOStorageV1 and following the naming convention\\n * FantosiDAOStorageVX.\\n */\\ncontract FantosiDAOStorageV1 is FantosiDAOProxyStorage {\\n    /// @notice Vetoer who has the ability to veto any proposal\\n    address public vetoer;\\n\\n    /// @notice The delay before voting on a proposal may take place, once proposed, in blocks\\n    uint256 public votingDelay;\\n\\n    /// @notice The duration of voting on a proposal, in blocks\\n    uint256 public votingPeriod;\\n\\n    /// @notice The basis point number of votes required in order for a voter to become a proposer. *DIFFERS from GovernerBravo\\n    uint256 public proposalThresholdBPS;\\n\\n    /// @notice The basis point number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed. *DIFFERS from GovernerBravo\\n    uint256 public quorumVotesBPS;\\n\\n    /// @notice The total number of proposals\\n    uint256 public proposalCount;\\n\\n    /// @notice The address of the FantosiDAOExecutor\\n    IFantosiDAOExecutor public timelock;\\n\\n    /// @notice The address of the Fantosi Photocard\\n    FantosiTokenLike public fantosiToken;\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping(uint256 => Proposal) public proposals;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping(address => uint256) public latestProposalIds;\\n\\n    struct Proposal {\\n        /// @notice Unique id for looking up a proposal\\n        uint256 id;\\n        /// @notice Creator of the proposal\\n        address proposer;\\n        /// @notice The number of votes needed to create a proposal at the time of proposal creation. *DIFFERS from GovernerBravo\\n        uint256 proposalThreshold;\\n        /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed at the time of proposal creation. *DIFFERS from GovernerBravo\\n        uint256 quorumVotes;\\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint256 eta;\\n        /// @notice the ordered list of target addresses for calls to be made\\n        address[] targets;\\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n        uint256[] sendValues;\\n        /// @notice The ordered list of function signatures to be called\\n        string[] signatures;\\n        /// @notice The ordered list of calldata to be passed to each call\\n        bytes[] calldatas;\\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\\n        uint256 startBlock;\\n        /// @notice The block at which voting ends: votes must be cast prior to this block\\n        uint256 endBlock;\\n        /// @notice Current number of votes in favor of this proposal\\n        uint256 forVotes;\\n        /// @notice Current number of votes in opposition to this proposal\\n        uint256 againstVotes;\\n        /// @notice Current number of votes for abstaining for this proposal\\n        uint256 abstainVotes;\\n        /// @notice Flag marking whether the proposal has been canceled\\n        bool canceled;\\n        /// @notice Flag marking whether the proposal has been vetoed\\n        bool vetoed;\\n        /// @notice Flag marking whether the proposal has been executed\\n        bool executed;\\n        /// @notice Receipts of ballots for the entire set of voters\\n        mapping(address => Receipt) receipts;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        /// @notice Whether or not a vote has been cast\\n        bool hasVoted;\\n        /// @notice Whether or not the voter supports the proposal or abstains\\n        uint8 support;\\n        /// @notice The number of votes the voter had, which were cast\\n        uint96 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed,\\n        Vetoed\\n    }\\n}\\n\\n/**\\n * @title Extra fields added to the `Proposal` struct from FantosiDAOStorageV1\\n * @notice The following fields were added to the `Proposal` struct:\\n * - `Proposal.totalSupply`\\n * - `Proposal.creationBlock`\\n */\\ncontract FantosiDAOStorageV1Adjusted is FantosiDAOProxyStorage {\\n    /// @notice Vetoer who has the ability to veto any proposal\\n    address public vetoer;\\n\\n    /// @notice The delay before voting on a proposal may take place, once proposed, in blocks\\n    uint256 public votingDelay;\\n\\n    /// @notice The duration of voting on a proposal, in blocks\\n    uint256 public votingPeriod;\\n\\n    /// @notice The basis point number of votes required in order for a voter to become a proposer. *DIFFERS from GovernerBravo\\n    uint256 public proposalThresholdBPS;\\n\\n    /// @notice The basis point number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed. *DIFFERS from GovernerBravo\\n    uint256 public quorumVotesBPS;\\n\\n    /// @notice The total number of proposals\\n    uint256 public proposalCount;\\n\\n    /// @notice The address of the Nouns DAO Executor FantosiDAOExecutor\\n    IFantosiDAOExecutor public timelock;\\n\\n    /// @notice The address of the Nouns tokens\\n    FantosiTokenLike public fantosiToken;\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping(uint256 => Proposal) internal _proposals;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping(address => uint256) public latestProposalIds;\\n\\n    struct Proposal {\\n        /// @notice Unique id for looking up a proposal\\n        uint256 id;\\n        /// @notice Creator of the proposal\\n        address proposer;\\n        /// @notice The number of votes needed to create a proposal at the time of proposal creation. *DIFFERS from GovernerBravo\\n        uint256 proposalThreshold;\\n        /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed at the time of proposal creation. *DIFFERS from GovernerBravo\\n        uint256 quorumVotes;\\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint256 eta;\\n        /// @notice the ordered list of target addresses for calls to be made\\n        address[] targets;\\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n        uint256[] sendValues;\\n        /// @notice The ordered list of function signatures to be called\\n        string[] signatures;\\n        /// @notice The ordered list of calldata to be passed to each call\\n        bytes[] calldatas;\\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\\n        uint256 startBlock;\\n        /// @notice The block at which voting ends: votes must be cast prior to this block\\n        uint256 endBlock;\\n        /// @notice Current number of votes in favor of this proposal\\n        uint256 forVotes;\\n        /// @notice Current number of votes in opposition to this proposal\\n        uint256 againstVotes;\\n        /// @notice Current number of votes for abstaining for this proposal\\n        uint256 abstainVotes;\\n        /// @notice Flag marking whether the proposal has been canceled\\n        bool canceled;\\n        /// @notice Flag marking whether the proposal has been vetoed\\n        bool vetoed;\\n        /// @notice Flag marking whether the proposal has been executed\\n        bool executed;\\n        /// @notice Receipts of ballots for the entire set of voters\\n        mapping(address => Receipt) receipts;\\n        /// @notice The total supply at the time of proposal creation\\n        uint256 totalSupply;\\n        /// @notice The block at which this proposal was created\\n        uint256 creationBlock;\\n        /// @notice The proposal description\\n        string description;\\n        /// @notice The proposal state\\n        string state;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        /// @notice Whether or not a vote has been cast\\n        bool hasVoted;\\n        /// @notice Whether or not the voter supports the proposal or abstains\\n        uint8 support;\\n        /// @notice The number of votes the voter had, which were cast\\n        uint96 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed,\\n        Vetoed\\n    }\\n}\\n\\n/**\\n * @title Storage for Governor Bravo Delegate\\n * @notice For future upgrades, do not change FantosiDAOStorageV2. Create a new\\n * contract which implements FantosiDAOStorageV2 and following the naming convention\\n * FantosiDAOStorageVX.\\n */\\ncontract FantosiDAOStorageV2 is FantosiDAOStorageV1Adjusted {\\n    DynamicQuorumParamsCheckpoint[] public quorumParamsCheckpoints;\\n\\n    /// @notice Pending new vetoer\\n    address public pendingVetoer;\\n\\n    struct DynamicQuorumParams {\\n        /// @notice The minimum basis point number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed.\\n        uint16 minQuorumVotesBPS;\\n        /// @notice The maximum basis point number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed.\\n        uint16 maxQuorumVotesBPS;\\n        /// @notice The dynamic quorum coefficient\\n        /// @dev Assumed to be fixed point integer with 6 decimals, i.e 0.2 is represented as 0.2 * 1e6 = 200000\\n        uint32 quorumCoefficient;\\n    }\\n\\n    /// @notice A checkpoint for storing dynamic quorum params from a given block\\n    struct DynamicQuorumParamsCheckpoint {\\n        /// @notice The block at which the new values were set\\n        uint32 fromBlock;\\n        /// @notice The parameter values of this checkpoint\\n        DynamicQuorumParams params;\\n    }\\n\\n    struct ProposalCondensed {\\n        /// @notice Unique id for looking up a proposal\\n        uint256 id;\\n        /// @notice Creator of the proposal\\n        address proposer;\\n        /// @notice The number of votes needed to create a proposal at the time of proposal creation. *DIFFERS from GovernerBravo\\n        uint256 proposalThreshold;\\n        /// @notice The minimum number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed at the time of proposal creation. *DIFFERS from GovernerBravo\\n        uint256 quorumVotes;\\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint256 eta;\\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\\n        uint256 startBlock;\\n        /// @notice The block at which voting ends: votes must be cast prior to this block\\n        uint256 endBlock;\\n        /// @notice Current number of votes in favor of this proposal\\n        uint256 forVotes;\\n        /// @notice Current number of votes in opposition to this proposal\\n        uint256 againstVotes;\\n        /// @notice Current number of votes for abstaining for this proposal\\n        uint256 abstainVotes;\\n        /// @notice Flag marking whether the proposal has been canceled\\n        bool canceled;\\n        /// @notice Flag marking whether the proposal has been vetoed\\n        bool vetoed;\\n        /// @notice Flag marking whether the proposal has been executed\\n        bool executed;\\n        /// @notice The total supply at the time of proposal creation\\n        uint256 totalSupply;\\n        /// @notice The block at which this proposal was created\\n        uint256 creationBlock;\\n        /// @notice The address that sends money after the proposal has been executed\\n        address[] targets;\\n        /// @notice The sending amount after the proposal has been executed\\n        uint256[] sendValues;\\n        /// @notice The proposal description\\n        string description;\\n        /// @notice The proposal state\\n        string state;\\n    }\\n}\\n\\ninterface IFantosiDAOExecutor {\\n    function delay() external view returns (uint256);\\n\\n    function GRACE_PERIOD() external view returns (uint256);\\n\\n    function acceptAdmin() external;\\n\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\n\\n    function queueTransaction(\\n        address target,\\n        uint256 sendValue,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external returns (bytes32);\\n\\n    function cancelTransaction(\\n        address target,\\n        uint256 sendValue,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external;\\n\\n    function executeTransaction(\\n        address target,\\n        uint256 sendValue,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external payable returns (bytes memory);\\n}\\n\\ninterface FantosiTokenLike {\\n    function getPriorVotes(address account, uint256 blockNumber) external view returns (uint96);\\n\\n    function totalSupply() external view returns (uint256);\\n}\\n\\ninterface IFantosiDAOLogic {\\n    struct ProposalDto {\\n        uint256 proposalNum;\\n        uint256 endVote;\\n    }\\n\\n    function getProposal(uint256 num) external view returns (ProposalDto memory);\\n\\n    function getProposalCount() external view returns (uint256);\\n\\n    function proposals(uint256 proposalId) external view returns (FantosiDAOStorageV2.ProposalCondensed memory);\\n}\\n\",\"keccak256\":\"0xb3750e5650e0571599ed0fdb4241ceb7a9f0affd9da8880e43d837092ec4c124\",\"license\":\"BSD-3-Clause\"},\"src/governance/FantosiDAOLogic.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\n\\n/// @title The Nouns DAO logic version 2\\n\\n/*********************************\\n * \\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2588\\u2588\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2588\\u2588\\u2591\\u2591\\u2588\\u2588\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2588\\u2588\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2588\\u2588\\u2591\\u2591\\u2588\\u2588\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2588\\u2588\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591 *\\n * \\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591 *\\n *********************************/\\n\\n// LICENSE\\n// FantosiDAOLogic.sol is a modified version of Compound Lab's GovernorBravoDelegate.sol:\\n// https://github.com/compound-finance/compound-protocol/blob/b9b14038612d846b83f8a009a82c38974ff2dcfe/contracts/Governance/GovernorBravoDelegate.sol\\n//\\n// GovernorBravoDelegate.sol source code Copyright 2020 Compound Labs, Inc. licensed under the BSD-3-Clause license.\\n// With modifications by Nounders DAO.\\n//\\n// Additional conditions of BSD-3-Clause can be found here: https://opensource.org/licenses/BSD-3-Clause\\n//\\n// MODIFICATIONS\\n// See FantosiDAOLogicV1 for initial GovernorBravoDelegate modifications.\\n\\n// FantosiDAOLogic adds:\\n// - `quorumParamsCheckpoints`, which store dynamic quorum parameters checkpoints\\n// to be used when calculating the dynamic quorum.\\n// - `_setDynamicQuorumParams(DynamicQuorumParams memory params)`, which allows the\\n// DAO to update the dynamic quorum parameters' values.\\n// - `getDynamicQuorumParamsAt(uint256 blockNumber_)`\\n// - Individual setters of the DynamicQuorumParams members:\\n//    - `_setMinQuorumVotesBPS(uint16 newMinQuorumVotesBPS)`\\n//    - `_setMaxQuorumVotesBPS(uint16 newMaxQuorumVotesBPS)`\\n//    - `_setQuorumCoefficient(uint32 newQuorumCoefficient)`\\n// - `minQuorumVotes` and `maxQuorumVotes`, which returns the current min and\\n// max quorum votes using the current Noun supply.\\n// - New `Proposal` struct member:\\n//    - `totalSupply` used in dynamic quorum calculation.\\n//    - `creationBlock` used for retrieving checkpoints of votes and dynamic quorum params. This now\\n// allows changing `votingDelay` without affecting the checkpoints lookup.\\n// - `quorumVotes(uint256 proposalId)`, which calculates and returns the dynamic\\n// quorum for a specific proposal.\\n// - `proposals(uint256 proposalId)` instead of the implicit getter, to avoid stack-too-deep error\\n//\\n// FantosiDAOLogic removes:\\n// - `quorumVotes()` has been replaced by `quorumVotes(uint256 proposalId)`.\\n\\npragma solidity ^0.8.6;\\n\\nimport \\\"./FantosiDAOInterfaces.sol\\\";\\n\\n// TODO: \\ud14c\\uc2a4\\ud2b8 \\uc644\\ub8cc \\ud6c4 \\uc81c\\uac70\\nimport \\\"hardhat/console.sol\\\";\\n\\ncontract FantosiDAOLogic is FantosiDAOStorageV2, FantosiDAOEventsV2 {\\n    /// @notice The name of this contract\\n    string public constant name = \\\"FANTOSI FAN COMMUNITY\\\";\\n\\n    /// @notice The minimum setable proposal threshold\\n    uint256 public constant MIN_PROPOSAL_THRESHOLD_BPS = 1; // 1 basis point or 0.01%\\n\\n    /// @notice The maximum setable proposal threshold\\n    uint256 public constant MAX_PROPOSAL_THRESHOLD_BPS = 1_000; // 1,000 basis points or 10%\\n\\n    /// @notice The minimum setable voting period\\n    uint256 public constant MIN_VOTING_PERIOD = 5_760; // About 24 hours\\n\\n    /// @notice The max setable voting period\\n    uint256 public constant MAX_VOTING_PERIOD = 80_640; // About 2 weeks\\n\\n    /// @notice The min setable voting delay\\n    uint256 public constant MIN_VOTING_DELAY = 1;\\n\\n    /// @notice The max setable voting delay\\n    uint256 public constant MAX_VOTING_DELAY = 40_320; // About 1 week\\n\\n    /// @notice The lower bound of minimum quorum votes basis points\\n    uint256 public constant MIN_QUORUM_VOTES_BPS_LOWER_BOUND = 200; // 200 basis points or 2%\\n\\n    /// @notice The upper bound of minimum quorum votes basis points\\n    uint256 public constant MIN_QUORUM_VOTES_BPS_UPPER_BOUND = 2_000; // 2,000 basis points or 20%\\n\\n    /// @notice The upper bound of maximum quorum votes basis points\\n    uint256 public constant MAX_QUORUM_VOTES_BPS_UPPER_BOUND = 6_000; // 4,000 basis points or 60%\\n\\n    /// @notice The maximum setable quorum votes basis points\\n    uint256 public constant MAX_QUORUM_VOTES_BPS = 2_000; // 2,000 basis points or 20%\\n\\n    /// @notice The maximum number of actions that can be included in a proposal\\n    uint256 public constant proposalMaxOperations = 10; // 10 actions\\n\\n    /// @notice The maximum priority fee used to cap gas refunds in `castRefundableVote`\\n    uint256 public constant MAX_REFUND_PRIORITY_FEE = 2 gwei;\\n\\n    /// @notice The vote refund gas overhead, including 7K for ETH transfer and 29K for general transaction overhead\\n    uint256 public constant REFUND_BASE_GAS = 36000;\\n\\n    /// @notice The maximum gas units the DAO will refund voters on; supports about 9,190 characters\\n    uint256 public constant MAX_REFUND_GAS_USED = 200_000;\\n\\n    /// @notice The maximum basefee the DAO will refund voters on\\n    uint256 public constant MAX_REFUND_BASE_FEE = 200 gwei;\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH =\\n        keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\");\\n\\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\\\"Ballot(uint256 proposalId,uint8 support)\\\");\\n\\n    /// @dev Introduced these errors to reduce contract size, to avoid deployment failure\\n    error AdminOnly();\\n    error InvalidMinQuorumVotesBPS();\\n    error InvalidMaxQuorumVotesBPS();\\n    error MinQuorumBPSGreaterThanMaxQuorumBPS();\\n    error UnsafeUint16Cast();\\n    error VetoerOnly();\\n    error PendingVetoerOnly();\\n    error VetoerBurned();\\n    error CantVetoExecutedProposal();\\n    error CantCancelExecutedProposal();\\n\\n    /**\\n     * @notice Used to initialize the contract during delegator contructor\\n     * @param timelock_ The address of the FantosiDAOExecutor\\n     * @param fantosiToken_ The address of the NOUN tokens\\n     * @param vetoer_ The address allowed to unilaterally veto proposals\\n     * @param votingPeriod_ The initial voting period\\n     * @param votingDelay_ The initial voting delay\\n     * @param proposalThresholdBPS_ The initial proposal threshold in basis points\\n     * @param dynamicQuorumParams_ The initial dynamic quorum parameters\\n     */\\n    constructor(\\n        address timelock_,\\n        address fantosiToken_,\\n        address vetoer_,\\n        address admin_,\\n        uint256 votingPeriod_,\\n        uint256 votingDelay_,\\n        uint256 proposalThresholdBPS_,\\n        DynamicQuorumParams memory dynamicQuorumParams_\\n    ) {\\n        require(address(timelock) == address(0), \\\"FantosiDAO::initialize: can only initialize once\\\");\\n\\n        // Proxy \\uad6c\\uc870 \\ubcc0\\uacbd\\uc73c\\ub85c \\uc778\\ud558\\uc5ec, admin\\uc744 \\uc5ec\\uae30\\uc11c \\uc138\\ud305\\n        admin = msg.sender;\\n\\n        require(timelock_ != address(0), \\\"FantosiDAO::initialize: invalid timelock address\\\");\\n        require(fantosiToken_ != address(0), \\\"FantosiDAO::initialize: invalid nouns address\\\");\\n        require(\\n            votingPeriod_ >= MIN_VOTING_PERIOD && votingPeriod_ <= MAX_VOTING_PERIOD,\\n            \\\"FantosiDAO::initialize: invalid voting period\\\"\\n        );\\n        require(\\n            votingDelay_ >= MIN_VOTING_DELAY && votingDelay_ <= MAX_VOTING_DELAY,\\n            \\\"FantosiDAO::initialize: invalid voting delay\\\"\\n        );\\n        require(\\n            proposalThresholdBPS_ >= MIN_PROPOSAL_THRESHOLD_BPS && proposalThresholdBPS_ <= MAX_PROPOSAL_THRESHOLD_BPS,\\n            \\\"FantosiDAO::initialize: invalid proposal threshold bps\\\"\\n        );\\n\\n        emit VotingPeriodSet(votingPeriod, votingPeriod_);\\n        emit VotingDelaySet(votingDelay, votingDelay_);\\n        emit ProposalThresholdBPSSet(proposalThresholdBPS, proposalThresholdBPS_);\\n\\n        timelock = IFantosiDAOExecutor(timelock_);\\n        fantosiToken = FantosiTokenLike(fantosiToken_);\\n        vetoer = vetoer_;\\n        votingPeriod = votingPeriod_;\\n        votingDelay = votingDelay_;\\n        proposalThresholdBPS = proposalThresholdBPS_;\\n        _setDynamicQuorumParams(\\n            dynamicQuorumParams_.minQuorumVotesBPS,\\n            dynamicQuorumParams_.maxQuorumVotesBPS,\\n            dynamicQuorumParams_.quorumCoefficient\\n        );\\n\\n        // \\ubc30\\ud3ec \\uc644\\ub8cc \\ud6c4, DAOExecutor\\ub85c admin \\uc774\\ub3d9\\n        admin = admin_;\\n    }\\n\\n    struct ProposalTemp {\\n        uint256 totalSupply;\\n        uint256 proposalThreshold;\\n        uint256 latestProposalId;\\n        uint256 startBlock;\\n        uint256 endBlock;\\n    }\\n\\n    /**\\n     * @notice Function used to propose a new proposal. Sender must have delegates above the proposal threshold\\n     * @param targets Target addresses for proposal calls\\n     * @param sendValues Eth values for proposal calls\\n     * @param signatures Function signatures for proposal calls\\n     * @param calldatas Calldatas for proposal calls\\n     * @param description String description of the proposal\\n     * @return Proposal id of new proposal\\n     */\\n    function propose(\\n        address[] memory targets,\\n        uint256[] memory sendValues,\\n        string[] memory signatures,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) public returns (uint256) {\\n        ProposalTemp memory temp;\\n\\n        temp.totalSupply = fantosiToken.totalSupply();\\n\\n        temp.proposalThreshold = bps2Uint(proposalThresholdBPS, temp.totalSupply);\\n\\n        require(\\n            fantosiToken.getPriorVotes(msg.sender, block.number - 1) > temp.proposalThreshold,\\n            \\\"FantosiDAO::propose: proposer votes below proposal threshold\\\"\\n        );\\n        require(\\n            targets.length == sendValues.length &&\\n                targets.length == signatures.length &&\\n                targets.length == calldatas.length,\\n            \\\"FantosiDAO::propose: proposal function information arity mismatch\\\"\\n        );\\n        require(targets.length != 0, \\\"FantosiDAO::propose: must provide actions\\\");\\n        require(targets.length <= proposalMaxOperations, \\\"FantosiDAO::propose: too many actions\\\");\\n\\n        temp.latestProposalId = latestProposalIds[msg.sender];\\n        if (temp.latestProposalId != 0) {\\n            string memory proposersLatestProposalState = state(temp.latestProposalId);\\n            require(\\n                compareString(proposersLatestProposalState, \\\"Active\\\") == false,\\n                \\\"FantosiDAO::propose: one live proposal per proposer, found an already active proposal\\\"\\n            );\\n            require(\\n                compareString(proposersLatestProposalState, \\\"Pending\\\") == false,\\n                \\\"FantosiDAO::propose: one live proposal per proposer, found an already pending proposal\\\"\\n            );\\n        }\\n\\n        temp.startBlock = block.number + votingDelay;\\n        temp.endBlock = temp.startBlock + votingPeriod;\\n\\n        proposalCount++;\\n        Proposal storage newProposal = _proposals[proposalCount];\\n        newProposal.id = proposalCount;\\n        newProposal.proposer = msg.sender;\\n        newProposal.proposalThreshold = temp.proposalThreshold;\\n        newProposal.eta = 0;\\n        newProposal.targets = targets;\\n        newProposal.sendValues = sendValues;\\n        newProposal.signatures = signatures;\\n        newProposal.calldatas = calldatas;\\n        newProposal.startBlock = temp.startBlock;\\n        newProposal.endBlock = temp.endBlock;\\n        newProposal.forVotes = 0;\\n        newProposal.againstVotes = 0;\\n        newProposal.abstainVotes = 0;\\n        newProposal.canceled = false;\\n        newProposal.executed = false;\\n        newProposal.vetoed = false;\\n        newProposal.totalSupply = temp.totalSupply;\\n        newProposal.creationBlock = block.number;\\n        newProposal.description = description;\\n        newProposal.state = state(proposalCount);\\n\\n        latestProposalIds[newProposal.proposer] = newProposal.id;\\n\\n        /// @notice Maintains backwards compatibility with GovernorBravo events\\n        emit ProposalCreated(\\n            newProposal.id,\\n            msg.sender,\\n            targets,\\n            sendValues,\\n            signatures,\\n            calldatas,\\n            newProposal.startBlock,\\n            newProposal.endBlock,\\n            description\\n        );\\n\\n        /// @notice Updated event with `proposalThreshold` and `minQuorumVotes`\\n        /// @notice `minQuorumVotes` is always zero since V2 introduces dynamic quorum with checkpoints\\n        emit ProposalCreatedWithRequirements(\\n            newProposal.id,\\n            msg.sender,\\n            targets,\\n            sendValues,\\n            signatures,\\n            calldatas,\\n            newProposal.startBlock,\\n            newProposal.endBlock,\\n            newProposal.proposalThreshold,\\n            minQuorumVotes(),\\n            description\\n        );\\n\\n        return newProposal.id;\\n    }\\n\\n    /**\\n     * @notice Queues a proposal of state succeeded\\n     * @param proposalId The id of the proposal to queue\\n     */\\n    function queue(uint256 proposalId) external {\\n        require(\\n            compareString(state(proposalId), \\\"Succeeded\\\") == true,\\n            \\\"FantosiDAO::queue: proposal can only be queued if it is succeeded\\\"\\n        );\\n        Proposal storage proposal = _proposals[proposalId];\\n        uint256 eta = block.timestamp + timelock.delay();\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            queueOrRevertInternal(\\n                proposal.targets[i],\\n                proposal.sendValues[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                eta\\n            );\\n        }\\n        proposal.eta = eta;\\n        emit ProposalQueued(proposalId, eta);\\n    }\\n\\n    function queueOrRevertInternal(\\n        address target,\\n        uint256 sendValue,\\n        string memory signature,\\n        bytes memory data,\\n        uint256 eta\\n    ) internal {\\n        require(\\n            !timelock.queuedTransactions(keccak256(abi.encode(target, sendValue, signature, data, eta))),\\n            \\\"FantosiDAO::queueOrRevertInternal: identical proposal action already queued at eta\\\"\\n        );\\n        timelock.queueTransaction(target, sendValue, signature, data, eta);\\n    }\\n\\n    /**\\n     * @notice Executes a queued proposal if eta has passed\\n     * @param proposalId The id of the proposal to execute\\n     */\\n    function execute(uint256 proposalId) external {\\n        require(\\n            compareString(state(proposalId), \\\"Queued\\\") == true,\\n            \\\"FantosiDAO::execute: proposal can only be executed if it is queued\\\"\\n        );\\n        Proposal storage proposal = _proposals[proposalId];\\n        proposal.executed = true;\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            timelock.executeTransaction(\\n                proposal.targets[i],\\n                proposal.sendValues[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n        emit ProposalExecuted(proposalId);\\n    }\\n\\n    /**\\n     * @notice Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\\n     * @param proposalId The id of the proposal to cancel\\n     */\\n    function cancel(uint256 proposalId) external {\\n        if (compareString(state(proposalId), \\\"Executed\\\")) {\\n            revert CantCancelExecutedProposal();\\n        }\\n\\n        Proposal storage proposal = _proposals[proposalId];\\n        require(\\n            msg.sender == proposal.proposer ||\\n                fantosiToken.getPriorVotes(proposal.proposer, block.number - 1) <= proposal.proposalThreshold,\\n            \\\"FantosiDAO::cancel: proposer above threshold\\\"\\n        );\\n\\n        proposal.canceled = true;\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            timelock.cancelTransaction(\\n                proposal.targets[i],\\n                proposal.sendValues[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n\\n        emit ProposalCanceled(proposalId);\\n    }\\n\\n    /**\\n     * @notice Vetoes a proposal only if sender is the vetoer and the proposal has not been executed.\\n     * @param proposalId The id of the proposal to veto\\n     */\\n    function veto(uint256 proposalId) external {\\n        if (vetoer == address(0)) {\\n            revert VetoerBurned();\\n        }\\n\\n        if (msg.sender != vetoer) {\\n            revert VetoerOnly();\\n        }\\n\\n        if (compareString(state(proposalId), \\\"Executed\\\") == true) {\\n            revert CantVetoExecutedProposal();\\n        }\\n\\n        Proposal storage proposal = _proposals[proposalId];\\n\\n        proposal.vetoed = true;\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            timelock.cancelTransaction(\\n                proposal.targets[i],\\n                proposal.sendValues[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n\\n        emit ProposalVetoed(proposalId);\\n    }\\n\\n    /**\\n     * @notice Gets actions of a proposal\\n     * @param proposalId the id of the proposal\\n     * @return targets\\n     * @return sendValues\\n     * @return signatures\\n     * @return calldatas\\n     */\\n    function getActions(uint256 proposalId)\\n        external\\n        view\\n        returns (\\n            address[] memory targets,\\n            uint256[] memory sendValues,\\n            string[] memory signatures,\\n            bytes[] memory calldatas\\n        )\\n    {\\n        Proposal storage p = _proposals[proposalId];\\n        return (p.targets, p.sendValues, p.signatures, p.calldatas);\\n    }\\n\\n    /**\\n     * @notice Gets the receipt for a voter on a given proposal\\n     * @param proposalId the id of proposal\\n     * @param voter The address of the voter\\n     * @return The voting receipt\\n     */\\n    function getReceipt(uint256 proposalId, address voter) external view returns (Receipt memory) {\\n        return _proposals[proposalId].receipts[voter];\\n    }\\n\\n    /**\\n     * @notice Gets the state of a proposal\\n     * @param proposalId The id of the proposal\\n     * @return Proposal state\\n     */\\n    function state(uint256 proposalId) public view returns (string memory) {\\n        require(proposalCount >= proposalId, \\\"FantosiDAO::state: invalid proposal id\\\");\\n\\n        Proposal storage proposal = _proposals[proposalId];\\n\\n        if (proposal.vetoed) {\\n            return \\\"Vetoed\\\";\\n        } else if (proposal.canceled) {\\n            return \\\"Canceled\\\";\\n        } else if (block.number <= proposal.startBlock) {\\n            return \\\"Pending\\\";\\n        } else if (block.number <= proposal.endBlock) {\\n            return \\\"Active\\\";\\n        } else if (proposal.forVotes <= proposal.againstVotes || proposal.forVotes < quorumVotes(proposal.id)) {\\n            return \\\"Defeated\\\";\\n        } else if (proposal.eta == 0) {\\n            return \\\"Succeeded\\\";\\n        } else if (proposal.executed) {\\n            return \\\"Executed\\\";\\n        } else if (block.timestamp >= proposal.eta + timelock.GRACE_PERIOD()) {\\n            return \\\"Expired\\\";\\n        } else {\\n            return \\\"Queued\\\";\\n        }\\n    }\\n\\n    /**\\n     * @notice Returns the proposal details given a proposal id.\\n     *     The `quorumVotes` member holds the *current* quorum, given the current votes.\\n     * @param proposalId the proposal id to get the data for\\n     * @return A `ProposalCondensed` struct with the proposal data\\n     */\\n    function proposals(uint256 proposalId) public view returns (ProposalCondensed memory) {\\n        Proposal storage proposal = _proposals[proposalId];\\n        return\\n            ProposalCondensed({\\n                id: proposal.id,\\n                proposer: proposal.proposer,\\n                proposalThreshold: proposal.proposalThreshold,\\n                quorumVotes: quorumVotes(proposal.id),\\n                eta: proposal.eta,\\n                startBlock: proposal.startBlock,\\n                endBlock: proposal.endBlock,\\n                forVotes: proposal.forVotes,\\n                againstVotes: proposal.againstVotes,\\n                abstainVotes: proposal.abstainVotes,\\n                canceled: proposal.canceled,\\n                vetoed: proposal.vetoed,\\n                executed: proposal.executed,\\n                totalSupply: proposal.totalSupply,\\n                creationBlock: proposal.creationBlock,\\n                targets: proposal.targets,\\n                sendValues: proposal.sendValues,\\n                description: proposal.description,\\n                state: state(proposalCount)\\n            });\\n    }\\n\\n    /**\\n     * @notice Cast a vote for a proposal\\n     * @param proposalId The id of the proposal to vote on\\n     * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n     */\\n    function castVote(uint256 proposalId, uint8 support) external {\\n        emit VoteCast(msg.sender, proposalId, support, castVoteInternal(msg.sender, proposalId, support), \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Cast a vote for a proposal, asking the DAO to refund gas costs.\\n     * Users with > 0 votes receive refunds. Refunds are partial when using a gas priority fee higher than the DAO's cap.\\n     * Refunds are partial when the DAO's balance is insufficient.\\n     * No refund is sent when the DAO's balance is empty. No refund is sent to users with no votes.\\n     * Voting takes place regardless of refund success.\\n     * @param proposalId The id of the proposal to vote on\\n     * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n     * @dev Reentrancy is defended against in `castVoteInternal` at the `receipt.hasVoted == false` require statement.\\n     */\\n    function castRefundableVote(uint256 proposalId, uint8 support) external {\\n        castRefundableVoteInternal(proposalId, support, \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Cast a vote for a proposal, asking the DAO to refund gas costs.\\n     * Users with > 0 votes receive refunds. Refunds are partial when using a gas priority fee higher than the DAO's cap.\\n     * Refunds are partial when the DAO's balance is insufficient.\\n     * No refund is sent when the DAO's balance is empty. No refund is sent to users with no votes.\\n     * Voting takes place regardless of refund success.\\n     * @param proposalId The id of the proposal to vote on\\n     * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n     * @param reason The reason given for the vote by the voter\\n     * @dev Reentrancy is defended against in `castVoteInternal` at the `receipt.hasVoted == false` require statement.\\n     */\\n    function castRefundableVoteWithReason(\\n        uint256 proposalId,\\n        uint8 support,\\n        string calldata reason\\n    ) external {\\n        castRefundableVoteInternal(proposalId, support, reason);\\n    }\\n\\n    /**\\n     * @notice Internal function that carries out refundable voting logic\\n     * @param proposalId The id of the proposal to vote on\\n     * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n     * @param reason The reason given for the vote by the voter\\n     * @dev Reentrancy is defended against in `castVoteInternal` at the `receipt.hasVoted == false` require statement.\\n     */\\n    function castRefundableVoteInternal(\\n        uint256 proposalId,\\n        uint8 support,\\n        string memory reason\\n    ) internal {\\n        uint256 startGas = gasleft();\\n        uint96 votes = castVoteInternal(msg.sender, proposalId, support);\\n        emit VoteCast(msg.sender, proposalId, support, votes, reason);\\n        if (votes > 0) {\\n            _refundGas(startGas);\\n        }\\n    }\\n\\n    /**\\n     * @notice Cast a vote for a proposal with a reason\\n     * @param proposalId The id of the proposal to vote on\\n     * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n     * @param reason The reason given for the vote by the voter\\n     */\\n    function castVoteWithReason(\\n        uint256 proposalId,\\n        uint8 support,\\n        string calldata reason\\n    ) external {\\n        emit VoteCast(msg.sender, proposalId, support, castVoteInternal(msg.sender, proposalId, support), reason);\\n    }\\n\\n    /**\\n     * @notice Cast a vote for a proposal by signature\\n     * @dev External function that accepts EIP-712 signatures for voting on proposals.\\n     */\\n    function castVoteBySig(\\n        uint256 proposalId,\\n        uint8 support,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        bytes32 domainSeparator = keccak256(\\n            abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainIdInternal(), address(this))\\n        );\\n        bytes32 structHash = keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\\n        bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(signatory != address(0), \\\"FantosiDAO::castVoteBySig: invalid signature\\\");\\n        emit VoteCast(signatory, proposalId, support, castVoteInternal(signatory, proposalId, support), \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Internal function that caries out voting logic\\n     * @param voter The voter that is casting their vote\\n     * @param proposalId The id of the proposal to vote on\\n     * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n     * @return The number of votes cast\\n     */\\n    function castVoteInternal(\\n        address voter,\\n        uint256 proposalId,\\n        uint8 support\\n    ) internal returns (uint96) {\\n        require(compareString(state(proposalId), \\\"Active\\\") == true, \\\"FantosiDAO::castVoteInternal: voting is closed\\\");\\n        require(support <= 2, \\\"FantosiDAO::castVoteInternal: invalid vote type\\\");\\n        Proposal storage proposal = _proposals[proposalId];\\n        Receipt storage receipt = proposal.receipts[voter];\\n        require(receipt.hasVoted == false, \\\"FantosiDAO::castVoteInternal: voter already voted\\\");\\n\\n        /// @notice: Unlike GovernerBravo, votes are considered from the block the proposal was created in order to normalize quorumVotes and proposalThreshold metrics\\n        uint96 votes = fantosiToken.getPriorVotes(voter, proposalCreationBlock(proposal));\\n\\n        if (support == 0) {\\n            proposal.againstVotes = proposal.againstVotes + votes;\\n        } else if (support == 1) {\\n            proposal.forVotes = proposal.forVotes + votes;\\n        } else if (support == 2) {\\n            proposal.abstainVotes = proposal.abstainVotes + votes;\\n        }\\n\\n        receipt.hasVoted = true;\\n        receipt.support = support;\\n        receipt.votes = votes;\\n\\n        return votes;\\n    }\\n\\n    /**\\n     * @notice Admin function for setting the voting delay\\n     * @param newVotingDelay new voting delay, in blocks\\n     */\\n    function _setVotingDelay(uint256 newVotingDelay) external {\\n        if (msg.sender != admin) {\\n            revert AdminOnly();\\n        }\\n        require(\\n            newVotingDelay >= MIN_VOTING_DELAY && newVotingDelay <= MAX_VOTING_DELAY,\\n            \\\"FantosiDAO::_setVotingDelay: invalid voting delay\\\"\\n        );\\n        uint256 oldVotingDelay = votingDelay;\\n        votingDelay = newVotingDelay;\\n\\n        emit VotingDelaySet(oldVotingDelay, votingDelay);\\n    }\\n\\n    /**\\n     * @notice Admin function for setting the voting period\\n     * @param newVotingPeriod new voting period, in blocks\\n     */\\n    function _setVotingPeriod(uint256 newVotingPeriod) external {\\n        if (msg.sender != admin) {\\n            revert AdminOnly();\\n        }\\n        require(\\n            newVotingPeriod >= MIN_VOTING_PERIOD && newVotingPeriod <= MAX_VOTING_PERIOD,\\n            \\\"FantosiDAO::_setVotingPeriod: invalid voting period\\\"\\n        );\\n        uint256 oldVotingPeriod = votingPeriod;\\n        votingPeriod = newVotingPeriod;\\n\\n        emit VotingPeriodSet(oldVotingPeriod, votingPeriod);\\n    }\\n\\n    /**\\n     * @notice Admin function for setting the proposal threshold basis points\\n     * @dev newProposalThresholdBPS must be greater than the hardcoded min\\n     * @param newProposalThresholdBPS new proposal threshold\\n     */\\n    function _setProposalThresholdBPS(uint256 newProposalThresholdBPS) external {\\n        if (msg.sender != admin) {\\n            revert AdminOnly();\\n        }\\n        require(\\n            newProposalThresholdBPS >= MIN_PROPOSAL_THRESHOLD_BPS &&\\n                newProposalThresholdBPS <= MAX_PROPOSAL_THRESHOLD_BPS,\\n            \\\"FantosiDAO::_setProposalThreshold: invalid proposal threshold bps\\\"\\n        );\\n        uint256 oldProposalThresholdBPS = proposalThresholdBPS;\\n        proposalThresholdBPS = newProposalThresholdBPS;\\n\\n        emit ProposalThresholdBPSSet(oldProposalThresholdBPS, proposalThresholdBPS);\\n    }\\n\\n    /**\\n     * @notice Admin function for setting the minimum quorum votes bps\\n     * @param newMinQuorumVotesBPS minimum quorum votes bps\\n     *     Must be between `MIN_QUORUM_VOTES_BPS_LOWER_BOUND` and `MIN_QUORUM_VOTES_BPS_UPPER_BOUND`\\n     *     Must be lower than or equal to maxQuorumVotesBPS\\n     */\\n    function _setMinQuorumVotesBPS(uint16 newMinQuorumVotesBPS) external {\\n        if (msg.sender != admin) {\\n            revert AdminOnly();\\n        }\\n        DynamicQuorumParams memory params = getDynamicQuorumParamsAt(block.number);\\n\\n        require(\\n            newMinQuorumVotesBPS >= MIN_QUORUM_VOTES_BPS_LOWER_BOUND &&\\n                newMinQuorumVotesBPS <= MIN_QUORUM_VOTES_BPS_UPPER_BOUND,\\n            \\\"FantosiDAO::_setMinQuorumVotesBPS: invalid min quorum votes bps\\\"\\n        );\\n        require(\\n            newMinQuorumVotesBPS <= params.maxQuorumVotesBPS,\\n            \\\"FantosiDAO::_setMinQuorumVotesBPS: min quorum votes bps greater than max\\\"\\n        );\\n\\n        uint16 oldMinQuorumVotesBPS = params.minQuorumVotesBPS;\\n        params.minQuorumVotesBPS = newMinQuorumVotesBPS;\\n\\n        _writeQuorumParamsCheckpoint(params);\\n\\n        emit MinQuorumVotesBPSSet(oldMinQuorumVotesBPS, newMinQuorumVotesBPS);\\n    }\\n\\n    /**\\n     * @notice Admin function for setting the maximum quorum votes bps\\n     * @param newMaxQuorumVotesBPS maximum quorum votes bps\\n     *     Must be lower than `MAX_QUORUM_VOTES_BPS_UPPER_BOUND`\\n     *     Must be higher than or equal to minQuorumVotesBPS\\n     */\\n    function _setMaxQuorumVotesBPS(uint16 newMaxQuorumVotesBPS) external {\\n        if (msg.sender != admin) {\\n            revert AdminOnly();\\n        }\\n        DynamicQuorumParams memory params = getDynamicQuorumParamsAt(block.number);\\n\\n        require(\\n            newMaxQuorumVotesBPS <= MAX_QUORUM_VOTES_BPS_UPPER_BOUND,\\n            \\\"FantosiDAO::_setMaxQuorumVotesBPS: invalid max quorum votes bps\\\"\\n        );\\n        require(\\n            params.minQuorumVotesBPS <= newMaxQuorumVotesBPS,\\n            \\\"FantosiDAO::_setMaxQuorumVotesBPS: min quorum votes bps greater than max\\\"\\n        );\\n\\n        uint16 oldMaxQuorumVotesBPS = params.maxQuorumVotesBPS;\\n        params.maxQuorumVotesBPS = newMaxQuorumVotesBPS;\\n\\n        _writeQuorumParamsCheckpoint(params);\\n\\n        emit MaxQuorumVotesBPSSet(oldMaxQuorumVotesBPS, newMaxQuorumVotesBPS);\\n    }\\n\\n    /**\\n     * @notice Admin function for setting the dynamic quorum coefficient\\n     * @param newQuorumCoefficient the new coefficient, as a fixed point integer with 6 decimals\\n     */\\n    function _setQuorumCoefficient(uint32 newQuorumCoefficient) external {\\n        if (msg.sender != admin) {\\n            revert AdminOnly();\\n        }\\n        DynamicQuorumParams memory params = getDynamicQuorumParamsAt(block.number);\\n\\n        uint32 oldQuorumCoefficient = params.quorumCoefficient;\\n        params.quorumCoefficient = newQuorumCoefficient;\\n\\n        _writeQuorumParamsCheckpoint(params);\\n\\n        emit QuorumCoefficientSet(oldQuorumCoefficient, newQuorumCoefficient);\\n    }\\n\\n    /**\\n     * @notice Admin function for setting all the dynamic quorum parameters\\n     * @param newMinQuorumVotesBPS minimum quorum votes bps\\n     *     Must be between `MIN_QUORUM_VOTES_BPS_LOWER_BOUND` and `MIN_QUORUM_VOTES_BPS_UPPER_BOUND`\\n     *     Must be lower than or equal to maxQuorumVotesBPS\\n     * @param newMaxQuorumVotesBPS maximum quorum votes bps\\n     *     Must be lower than `MAX_QUORUM_VOTES_BPS_UPPER_BOUND`\\n     *     Must be higher than or equal to minQuorumVotesBPS\\n     * @param newQuorumCoefficient the new coefficient, as a fixed point integer with 6 decimals\\n     */\\n    function _setDynamicQuorumParams(\\n        uint16 newMinQuorumVotesBPS,\\n        uint16 newMaxQuorumVotesBPS,\\n        uint32 newQuorumCoefficient\\n    ) public {\\n        if (msg.sender != admin) {\\n            revert AdminOnly();\\n        }\\n        if (\\n            newMinQuorumVotesBPS < MIN_QUORUM_VOTES_BPS_LOWER_BOUND ||\\n            newMinQuorumVotesBPS > MIN_QUORUM_VOTES_BPS_UPPER_BOUND\\n        ) {\\n            revert InvalidMinQuorumVotesBPS();\\n        }\\n        if (newMaxQuorumVotesBPS > MAX_QUORUM_VOTES_BPS_UPPER_BOUND) {\\n            revert InvalidMaxQuorumVotesBPS();\\n        }\\n        if (newMinQuorumVotesBPS > newMaxQuorumVotesBPS) {\\n            revert MinQuorumBPSGreaterThanMaxQuorumBPS();\\n        }\\n\\n        DynamicQuorumParams memory oldParams = getDynamicQuorumParamsAt(block.number);\\n\\n        DynamicQuorumParams memory params = DynamicQuorumParams({\\n            minQuorumVotesBPS: newMinQuorumVotesBPS,\\n            maxQuorumVotesBPS: newMaxQuorumVotesBPS,\\n            quorumCoefficient: newQuorumCoefficient\\n        });\\n        _writeQuorumParamsCheckpoint(params);\\n\\n        emit MinQuorumVotesBPSSet(oldParams.minQuorumVotesBPS, params.minQuorumVotesBPS);\\n        emit MaxQuorumVotesBPSSet(oldParams.maxQuorumVotesBPS, params.maxQuorumVotesBPS);\\n        emit QuorumCoefficientSet(oldParams.quorumCoefficient, params.quorumCoefficient);\\n    }\\n\\n    function _withdraw() external returns (uint256, bool) {\\n        if (msg.sender != admin) {\\n            revert AdminOnly();\\n        }\\n\\n        uint256 amount = address(this).balance;\\n        (bool sent, ) = msg.sender.call{ value: amount }(\\\"\\\");\\n\\n        emit Withdraw(amount, sent);\\n\\n        return (amount, sent);\\n    }\\n\\n    /**\\n     * @notice Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\n     * @dev Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\n     * @param newPendingAdmin New pending admin.\\n     */\\n    function _setPendingAdmin(address newPendingAdmin) external {\\n        // Check caller = admin\\n        require(msg.sender == admin, \\\"FantosiDAO::_setPendingAdmin: admin only\\\");\\n\\n        // Save current value, if any, for inclusion in log\\n        address oldPendingAdmin = pendingAdmin;\\n\\n        // Store pendingAdmin with value newPendingAdmin\\n        pendingAdmin = newPendingAdmin;\\n\\n        // Emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin)\\n        emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin);\\n    }\\n\\n    /**\\n     * @notice Accepts transfer of admin rights. msg.sender must be pendingAdmin\\n     * @dev Admin function for pending admin to accept role and update admin\\n     */\\n    function _acceptAdmin() external {\\n        // Check caller is pendingAdmin and pendingAdmin \\u2260 address(0)\\n        require(msg.sender == pendingAdmin && msg.sender != address(0), \\\"FantosiDAO::_acceptAdmin: pending admin only\\\");\\n\\n        // Save current values for inclusion in log\\n        address oldAdmin = admin;\\n        address oldPendingAdmin = pendingAdmin;\\n\\n        // Store admin with value pendingAdmin\\n        admin = pendingAdmin;\\n\\n        // Clear the pending value\\n        pendingAdmin = address(0);\\n\\n        emit NewAdmin(oldAdmin, admin);\\n        emit NewPendingAdmin(oldPendingAdmin, pendingAdmin);\\n    }\\n\\n    /**\\n     * @notice Begins transition of vetoer. The newPendingVetoer must call _acceptVetoer to finalize the transfer.\\n     * @param newPendingVetoer New Pending Vetoer\\n     */\\n    function _setPendingVetoer(address newPendingVetoer) public {\\n        if (msg.sender != vetoer) {\\n            revert VetoerOnly();\\n        }\\n\\n        emit NewPendingVetoer(pendingVetoer, newPendingVetoer);\\n\\n        pendingVetoer = newPendingVetoer;\\n    }\\n\\n    function _acceptVetoer() external {\\n        if (msg.sender != pendingVetoer) {\\n            revert PendingVetoerOnly();\\n        }\\n\\n        // Update vetoer\\n        emit NewVetoer(vetoer, pendingVetoer);\\n        vetoer = pendingVetoer;\\n\\n        // Clear the pending value\\n        emit NewPendingVetoer(pendingVetoer, address(0));\\n        pendingVetoer = address(0);\\n    }\\n\\n    /**\\n     * @notice Burns veto priviledges\\n     * @dev Vetoer function destroying veto power forever\\n     */\\n    function _burnVetoPower() public {\\n        // Check caller is vetoer\\n        require(msg.sender == vetoer, \\\"FantosiDAO::_burnVetoPower: vetoer only\\\");\\n\\n        // Update vetoer to 0x0\\n        emit NewVetoer(vetoer, address(0));\\n        vetoer = address(0);\\n\\n        // Clear the pending value\\n        emit NewPendingVetoer(pendingVetoer, address(0));\\n        pendingVetoer = address(0);\\n    }\\n\\n    /**\\n     * @notice Current proposal threshold using Noun Total Supply\\n     * Differs from `GovernerBravo` which uses fixed amount\\n     */\\n    function proposalThreshold() public view returns (uint256) {\\n        return bps2Uint(proposalThresholdBPS, fantosiToken.totalSupply());\\n    }\\n\\n    function proposalCreationBlock(Proposal storage proposal) internal view returns (uint256) {\\n        if (proposal.creationBlock == 0) {\\n            return proposal.startBlock - votingDelay;\\n        }\\n        return proposal.creationBlock;\\n    }\\n\\n    /**\\n     * @notice Quorum votes required for a specific proposal to succeed\\n     * Differs from `GovernerBravo` which uses fixed amount\\n     */\\n    function quorumVotes(uint256 proposalId) public view returns (uint256) {\\n        Proposal storage proposal = _proposals[proposalId];\\n        if (proposal.totalSupply == 0) {\\n            return proposal.quorumVotes;\\n        }\\n\\n        return\\n            dynamicQuorumVotes(\\n                proposal.againstVotes,\\n                proposal.totalSupply,\\n                getDynamicQuorumParamsAt(proposal.creationBlock)\\n            );\\n    }\\n\\n    /**\\n     * @notice Calculates the required quorum of for-votes based on the amount of against-votes\\n     *     The more against-votes there are for a proposal, the higher the required quorum is.\\n     *     The quorum BPS is between `params.minQuorumVotesBPS` and params.maxQuorumVotesBPS.\\n     *     The additional quorum is calculated as:\\n     *       quorumCoefficient * againstVotesBPS\\n     * @dev Note the coefficient is a fixed point integer with 6 decimals\\n     * @param againstVotes Number of against-votes in the proposal\\n     * @param totalSupply The total supply of Nouns at the time of proposal creation\\n     * @param params Configurable parameters for calculating the quorum based on againstVotes. See `DynamicQuorumParams` definition for additional details.\\n     * @return quorumVotes The required quorum\\n     */\\n    function dynamicQuorumVotes(\\n        uint256 againstVotes,\\n        uint256 totalSupply,\\n        DynamicQuorumParams memory params\\n    ) public pure returns (uint256) {\\n        uint256 againstVotesBPS = (10000 * againstVotes) / totalSupply;\\n        uint256 quorumAdjustmentBPS = (params.quorumCoefficient * againstVotesBPS) / 1e6;\\n        uint256 adjustedQuorumBPS = params.minQuorumVotesBPS + quorumAdjustmentBPS;\\n        uint256 quorumBPS = min(params.maxQuorumVotesBPS, adjustedQuorumBPS);\\n        return bps2Uint(quorumBPS, totalSupply);\\n    }\\n\\n    /**\\n     * @notice returns the dynamic quorum parameters values at a certain block number\\n     * @dev The checkpoints array must not be empty, and the block number must be higher than or equal to\\n     *     the block of the first checkpoint\\n     * @param blockNumber_ the block number to get the params at\\n     * @return The dynamic quorum parameters that were set at the given block number\\n     */\\n    function getDynamicQuorumParamsAt(uint256 blockNumber_) public view returns (DynamicQuorumParams memory) {\\n        uint32 blockNumber = safe32(blockNumber_, \\\"FantosiDAO::getDynamicQuorumParamsAt: block number exceeds 32 bits\\\");\\n        uint256 len = quorumParamsCheckpoints.length;\\n\\n        if (len == 0) {\\n            return\\n                DynamicQuorumParams({\\n                    minQuorumVotesBPS: safe16(quorumVotesBPS),\\n                    maxQuorumVotesBPS: safe16(quorumVotesBPS),\\n                    quorumCoefficient: 0\\n                });\\n        }\\n\\n        if (quorumParamsCheckpoints[len - 1].fromBlock <= blockNumber) {\\n            return quorumParamsCheckpoints[len - 1].params;\\n        }\\n\\n        if (quorumParamsCheckpoints[0].fromBlock > blockNumber) {\\n            return\\n                DynamicQuorumParams({\\n                    minQuorumVotesBPS: safe16(quorumVotesBPS),\\n                    maxQuorumVotesBPS: safe16(quorumVotesBPS),\\n                    quorumCoefficient: 0\\n                });\\n        }\\n\\n        uint256 lower = 0;\\n        uint256 upper = len - 1;\\n        while (upper > lower) {\\n            uint256 center = upper - (upper - lower) / 2;\\n            DynamicQuorumParamsCheckpoint memory cp = quorumParamsCheckpoints[center];\\n            if (cp.fromBlock == blockNumber) {\\n                return cp.params;\\n            } else if (cp.fromBlock < blockNumber) {\\n                lower = center;\\n            } else {\\n                upper = center - 1;\\n            }\\n        }\\n        return quorumParamsCheckpoints[lower].params;\\n    }\\n\\n    function _writeQuorumParamsCheckpoint(DynamicQuorumParams memory params) internal {\\n        uint32 blockNumber = safe32(block.number, \\\"block number exceeds 32 bits\\\");\\n        uint256 pos = quorumParamsCheckpoints.length;\\n        if (pos > 0 && quorumParamsCheckpoints[pos - 1].fromBlock == blockNumber) {\\n            quorumParamsCheckpoints[pos - 1].params = params;\\n        } else {\\n            quorumParamsCheckpoints.push(DynamicQuorumParamsCheckpoint({ fromBlock: blockNumber, params: params }));\\n        }\\n    }\\n\\n    function _refundGas(uint256 startGas) internal {\\n        unchecked {\\n            uint256 balance = address(this).balance;\\n            if (balance == 0) {\\n                return;\\n            }\\n            uint256 basefee = min(block.basefee, MAX_REFUND_BASE_FEE);\\n            uint256 gasPrice = min(tx.gasprice, basefee + MAX_REFUND_PRIORITY_FEE);\\n            uint256 gasUsed = min(startGas - gasleft() + REFUND_BASE_GAS, MAX_REFUND_GAS_USED);\\n            uint256 refundAmount = min(gasPrice * gasUsed, balance);\\n            (bool refundSent, ) = tx.origin.call{ value: refundAmount }(\\\"\\\");\\n            emit RefundableVote(tx.origin, refundAmount, refundSent);\\n        }\\n    }\\n\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @notice Current min quorum votes using Noun total supply\\n     */\\n    function minQuorumVotes() public view returns (uint256) {\\n        return bps2Uint(getDynamicQuorumParamsAt(block.number).minQuorumVotesBPS, fantosiToken.totalSupply());\\n    }\\n\\n    /**\\n     * @notice Current max quorum votes using Noun total supply\\n     */\\n    function maxQuorumVotes() public view returns (uint256) {\\n        return bps2Uint(getDynamicQuorumParamsAt(block.number).maxQuorumVotesBPS, fantosiToken.totalSupply());\\n    }\\n\\n    function bps2Uint(uint256 bps, uint256 number) internal pure returns (uint256) {\\n        return (number * bps) / 10000;\\n    }\\n\\n    function getChainIdInternal() internal view returns (uint256) {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        return chainId;\\n    }\\n\\n    function compareString(string memory a, string memory b) internal view returns (bool) {\\n        return (keccak256(abi.encodePacked((a))) == keccak256(abi.encodePacked((b))));\\n    }\\n\\n    // function getProposal(uint256 num) external view returns (Proposal memory proposal) {\\n    //     return _proposals[num];\\n    // }\\n\\n    function getProposalCount() external view returns (uint256) {\\n        return proposalCount;\\n    }\\n\\n    function safe32(uint256 n, string memory errorMessage) internal pure returns (uint32) {\\n        require(n <= type(uint32).max, errorMessage);\\n        return uint32(n);\\n    }\\n\\n    function safe16(uint256 n) internal pure returns (uint16) {\\n        if (n > type(uint16).max) {\\n            revert UnsafeUint16Cast();\\n        }\\n        return uint16(n);\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0xb2bffca195bd6babe7202fa2e29e83ac440cbeaa14c214796e9ccffa5613e42b\",\"license\":\"BSD-3-Clause\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106103dc5760003560e01c80637bdbe4d0116101fd578063c82fbd0811610118578063deaaa7cc116100ab578063e9c714f21161007a578063e9c714f214610b60578063ec91deda14610b75578063f851a44014610b95578063fbfee87614610bb5578063fe0d94c114610bcd57600080fd5b8063deaaa7cc14610adc578063e23a9a5214610b10578063e48083fe146109fc578063e7951bb91461097957600080fd5b8063d8bff440116100e7578063d8bff44014610a66578063da35c66414610a86578063da95691a14610a9c578063ddf0b00914610abc57600080fd5b8063c82fbd08146109fc578063ccfa51c914610a11578063d33219b414610a26578063d3f662e114610a4657600080fd5b8063b112626311610190578063bc4cd0841161015f578063bc4cd0841461098f578063bf7a2963146109a8578063c08cc02d146109bd578063c10eb14d146109d257600080fd5b8063b11262631461092e578063b58131b014610944578063b71d1a0c14610959578063bb6775821461097957600080fd5b80639a0dfb53116101cc5780639a0dfb53146108a9578063a64e024a146108c9578063a67d0635146108e0578063abb308b21461090057600080fd5b80637bdbe4d0146108495780637fa230bd1461085e57806383cce0e11461087357806397d048e51461088957600080fd5b80632b5ca189116102f857806340e58ee51161028b578063567813881161025a57806356781388146107a95780635c60da1b146107c957806364c05995146107e95780637a3da691146108095780637b3c71d31461082957600080fd5b806340e58ee51461071c57806344fac8f61461073c57806347f4a0771461075c57806350196db31461078957600080fd5b80633bccf4fd116102c75780633bccf4fd146106b15780633be8ef3f146106d15780633e273334146106e75780633e4f49e6146106fc57600080fd5b80632b5ca189146106365780632cfc81c614610656578063328dd9821461066b5780633932abb11461069b57600080fd5b806317977c611161037057806320606b701161033f57806320606b70146105b6578063215809ca146105ea578063267822471461060057806326e6dcb01461062057600080fd5b806317977c61146105335780631d28dec7146105605780631dfb1b5a146105805780631e7b5d3a146105a057600080fd5b806306fdde03116103ac57806306fdde031461048d5780630ea2d98c146104db5780630f7b1f08146104fd57806314a67ea41461051d57600080fd5b80623d21d6146103e8578063013cf08b1461042557806302a251a314610452578063042bc3de1461047657600080fd5b366103e357005b600080fd5b3480156103f457600080fd5b50600a54610408906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561043157600080fd5b5061044561044036600461477b565b610bed565b60405161041c9190614860565b34801561045e57600080fd5b5061046860055481565b60405190815260200161041c565b34801561048257600080fd5b5061046862030d4081565b34801561049957600080fd5b506104ce6040518060400160405280601581526020017446414e544f53492046414e20434f4d4d554e49545960581b81525081565b60405161041c91906149c7565b3480156104e757600080fd5b506104fb6104f636600461477b565b610ecf565b005b34801561050957600080fd5b5061046861051836600461477b565b610fc2565b34801561052957600080fd5b5061046860065481565b34801561053f57600080fd5b5061046861054e3660046149f6565b600c6020526000908152604090205481565b34801561056c57600080fd5b506104fb61057b36600461477b565b611004565b34801561058c57600080fd5b506104fb61059b36600461477b565b611218565b3480156105ac57600080fd5b506104686103e881565b3480156105c257600080fd5b506104687f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b3480156105f657600080fd5b5061046861168081565b34801561060c57600080fd5b50600154610408906001600160a01b031681565b34801561062c57600080fd5b5061046861177081565b34801561064257600080fd5b506104fb610651366004614a25565b6112fa565b34801561066257600080fd5b506104fb611392565b34801561067757600080fd5b5061068b61068636600461477b565b611474565b60405161041c9493929190614a95565b3480156106a757600080fd5b5061046860045481565b3480156106bd57600080fd5b506104fb6106cc366004614afe565b611705565b3480156106dd57600080fd5b50610468618ca081565b3480156106f357600080fd5b5061046861196b565b34801561070857600080fd5b506104ce61071736600461477b565b611a02565b34801561072857600080fd5b506104fb61073736600461477b565b611cce565b34801561074857600080fd5b506104fb610757366004614b4c565b611f7f565b34801561076857600080fd5b5061077c61077736600461477b565b611f9d565b60405161041c9190614b78565b34801561079557600080fd5b506104fb6107a4366004614bba565b612296565b3480156107b557600080fd5b506104fb6107c4366004614b4c565b61242b565b3480156107d557600080fd5b50600254610408906001600160a01b031681565b3480156107f557600080fd5b506104fb610804366004614bd5565b612484565b34801561081557600080fd5b506104fb610824366004614bba565b6124cb565b34801561083557600080fd5b506104fb610844366004614bd5565b612670565b34801561085557600080fd5b50610468600a81565b34801561086a57600080fd5b506104686126ae565b34801561087f57600080fd5b5061046860075481565b34801561089557600080fd5b506104fb6108a436600461477b565b612717565b3480156108b557600080fd5b506104686108c4366004614ca3565b61280f565b3480156108d557600080fd5b5061046862013b0081565b3480156108ec57600080fd5b50600e54610408906001600160a01b031681565b34801561090c57600080fd5b5061092061091b36600461477b565b612897565b60405161041c929190614d3a565b34801561093a57600080fd5b50610468619d8081565b34801561095057600080fd5b506104686128fe565b34801561096557600080fd5b506104fb6109743660046149f6565b612959565b34801561098557600080fd5b506104686107d081565b34801561099b57600080fd5b50610468642e90edd00081565b3480156109b457600080fd5b506104fb612a17565b3480156109c957600080fd5b50600854610468565b3480156109de57600080fd5b506109e7612b19565b6040805192835290151560208301520161041c565b348015610a0857600080fd5b50610468600181565b348015610a1d57600080fd5b5061046860c881565b348015610a3257600080fd5b50600954610408906001600160a01b031681565b348015610a5257600080fd5b506104fb610a613660046149f6565b612bd8565b348015610a7257600080fd5b50600354610408906001600160a01b031681565b348015610a9257600080fd5b5061046860085481565b348015610aa857600080fd5b50610468610ab7366004615000565b612c6c565b348015610ac857600080fd5b506104fb610ad736600461477b565b613359565b348015610ae857600080fd5b506104687f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b348015610b1c57600080fd5b50610b30610b2b3660046150d2565b61369a565b6040805182511515815260208084015160ff1690820152918101516001600160601b03169082015260600161041c565b348015610b6c57600080fd5b506104fb613712565b348015610b8157600080fd5b506104fb610b903660046150f5565b613832565b348015610ba157600080fd5b50600054610408906001600160a01b031681565b348015610bc157600080fd5b50610468637735940081565b348015610bd957600080fd5b506104fb610be836600461477b565b613a0a565b610c916040518061026001604052806000815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581526020016000151581526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b6000828152600b6020908152604091829020825161026081018452815480825260018301546001600160a01b03169382019390935260028201549381019390935291906060820190610ce290610fc2565b815260048301546020808301919091526009840154604080840191909152600a8501546060840152600b8501546080840152600c85015460a0840152600d85015460c0840152600e85015460ff808216151560e086015261010080830482161515908601526201000090910416151561012084015260108501546101408401526011850154610160840152600585018054825181850281018501909352808352610180909401939192909190830182828015610dc757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610da9575b5050505050815260200182600601805480602002602001604051908101604052809291908181526020018280548015610e1f57602002820191906000526020600020905b815481526020019060010190808311610e0b575b50505050508152602001826012018054610e3890615138565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6490615138565b8015610eb15780601f10610e8657610100808354040283529160200191610eb1565b820191906000526020600020905b815481529060010190602001808311610e9457829003601f168201915b50505050508152602001610ec6600854611a02565b90529392505050565b6000546001600160a01b03163314610efa57604051633057182d60e21b815260040160405180910390fd5b6116808110158015610f0f575062013b008111155b610f7c5760405162461bcd60e51b815260206004820152603360248201527f46616e746f736944414f3a3a5f736574566f74696e67506572696f643a20696e6044820152721d985b1a59081d9bdd1a5b99c81c195c9a5bd9606a1b60648201526084015b60405180910390fd5b600580549082905560408051828152602081018490527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e882891015b60405180910390a15050565b6000818152600b602052604081206010810154610fe3576003015492915050565b610ffd81600c015482601001546108c48460110154611f9d565b9392505050565b6003546001600160a01b031661102d57604051631efc808d60e31b815260040160405180910390fd5b6003546001600160a01b0316331461105857604051631387214760e01b815260040160405180910390fd5b61108a61106482611a02565b60405180604001604052806008815260200167115e1958dd5d195960c21b815250613c3e565b1515600114156110ad57604051636c0a12d560e01b815260040160405180910390fd5b6000818152600b60205260408120600e8101805461ff001916610100179055905b60058201548110156111e7576009546005830180546001600160a01b039092169163591fcdfe9190849081106111065761110661516d565b6000918252602090912001546006850180546001600160a01b0390921691859081106111345761113461516d565b90600052602060002001548560070185815481106111545761115461516d565b906000526020600020018660080186815481106111735761117361516d565b9060005260206000200187600401546040518663ffffffff1660e01b81526004016111a2959493929190615224565b600060405180830381600087803b1580156111bc57600080fd5b505af11580156111d0573d6000803e3d6000fd5b5050505080806111df90615286565b9150506110ce565b506040518281527fde0cea2a3a0097cc3d981d40c375407760e85bc9c5e69aea449ac3885f8615c690602001610fb6565b6000546001600160a01b0316331461124357604051633057182d60e21b815260040160405180910390fd5b600181101580156112565750619d808111155b6112bc5760405162461bcd60e51b815260206004820152603160248201527f46616e746f736944414f3a3a5f736574566f74696e6744656c61793a20696e76604482015270616c696420766f74696e672064656c617960781b6064820152608401610f73565b600480549082905560408051828152602081018490527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a939101610fb6565b6000546001600160a01b0316331461132557604051633057182d60e21b815260040160405180910390fd5b600061133043611f9d565b60408101805163ffffffff851690915290915061134c82613c97565b6040805163ffffffff8084168252851660208201527f5e3adb1066359dafa23c629f245d93543856115700821dcb4debc416f393c46991015b60405180910390a1505050565b600e546001600160a01b031633146113bd57604051631bd9bb1b60e31b815260040160405180910390fd5b600354600e546040517fc5644f3588a066b15dcf6b636b74aadca57cfaccf608d9de7d8786364b7a8d0292611400926001600160a01b03918216929116906152a1565b60405180910390a1600e54600380546001600160a01b0319166001600160a01b0390921691821790556040517f7ad92e57a52c4e3e83ba624622b14e3a5efa0160dd6f9a7975c43ea66bad79ea9161145a916000906152a1565b60405180910390a1600e80546001600160a01b0319169055565b6060806060806000600b6000878152602001908152602001600020905080600501816006018260070183600801838054806020026020016040519081016040528092919081815260200182805480156114f657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116114d8575b505050505093508280548060200260200160405190810160405280929190818152602001828054801561154857602002820191906000526020600020905b815481526020019060010190808311611534575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b8282101561161c57838290600052602060002001805461158f90615138565b80601f01602080910402602001604051908101604052809291908181526020018280546115bb90615138565b80156116085780601f106115dd57610100808354040283529160200191611608565b820191906000526020600020905b8154815290600101906020018083116115eb57829003601f168201915b505050505081526020019060010190611570565b50505050915080805480602002602001604051908101604052809291908181526020016000905b828210156116ef57838290600052602060002001805461166290615138565b80601f016020809104026020016040519081016040528092919081815260200182805461168e90615138565b80156116db5780601f106116b0576101008083540402835291602001916116db565b820191906000526020600020905b8154815290600101906020018083116116be57829003601f168201915b505050505081526020019060010190611643565b5050505090509450945094509450509193509193565b604080518082018252601581527446414e544f53492046414e20434f4d4d554e49545960581b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f478d7bfab396900811ca9de79ac4502f20a9d94e70e2525cc990aec96a333fe081840152466060820152306080808301919091528351808303909101815260a0820184528051908301207f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f60c083015260e0820189905260ff8816610100808401919091528451808403909101815261012083019094528351939092019290922061190160f01b6101408401526101428301829052610162830181905290916000906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa15801561188a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166119025760405162461bcd60e51b815260206004820152602c60248201527f46616e746f736944414f3a3a63617374566f746542795369673a20696e76616c60448201526b6964207369676e617475726560a01b6064820152608401610f73565b806001600160a01b031660008051602061565f8339815191528a8a611928858e8e613e83565b6040805193845260ff90921660208401526001600160601b03169082015260806060820181905260009082015260a00160405180910390a2505050505050505050565b60006119fd61197943611f9d565b6000015161ffff16600a60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f891906152bb565b614177565b905090565b6060816008541015611a655760405162461bcd60e51b815260206004820152602660248201527f46616e746f736944414f3a3a73746174653a20696e76616c69642070726f706f6044820152651cd85b081a5960d21b6064820152608401610f73565b6000828152600b60205260409020600e810154610100900460ff1615611aa957505060408051808201909152600681526515995d1bd95960d21b6020820152919050565b600e81015460ff1615611adc57505060408051808201909152600881526710d85b98d95b195960c21b6020820152919050565b80600901544311611b0c57505060408051808201909152600781526650656e64696e6760c81b6020820152919050565b80600a01544311611b3b57505060408051808201909152600681526541637469766560d01b6020820152919050565b80600c015481600b0154111580611b5f57508054611b5890610fc2565b81600b0154105b15611b8a57505060408051808201909152600881526711195999585d195960c21b6020820152919050565b6004810154611bba57505060408051808201909152600981526814dd58d8d95959195960ba1b6020820152919050565b600e81015462010000900460ff1615611bf3575050604080518082019091526008815267115e1958dd5d195960c21b6020820152919050565b600960009054906101000a90046001600160a01b03166001600160a01b031663c1a287e26040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6a91906152bb565b8160040154611c7991906152d4565b4210611ca4575050604080518082019091526007815266115e1c1a5c995960ca1b6020820152919050565b5050604080518082019091526006815265145d595d595960d21b6020820152919050565b50919050565b611cda61106482611a02565b15611cf857604051630b586af560e01b815260040160405180910390fd5b6000818152600b6020526040902060018101546001600160a01b0316331480611dc257506002810154600a546001808401546001600160a01b039283169263782d6fe192911690611d4990436152ec565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa158015611d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db69190615303565b6001600160601b031611155b611e235760405162461bcd60e51b815260206004820152602c60248201527f46616e746f736944414f3a3a63616e63656c3a2070726f706f7365722061626f60448201526b1d99481d1a1c995cda1bdb1960a21b6064820152608401610f73565b600e8101805460ff1916600117905560005b6005820154811015611f4e576009546005830180546001600160a01b039092169163591fcdfe919084908110611e6d57611e6d61516d565b6000918252602090912001546006850180546001600160a01b039092169185908110611e9b57611e9b61516d565b9060005260206000200154856007018581548110611ebb57611ebb61516d565b90600052602060002001866008018681548110611eda57611eda61516d565b9060005260206000200187600401546040518663ffffffff1660e01b8152600401611f09959493929190615224565b600060405180830381600087803b158015611f2357600080fd5b505af1158015611f37573d6000803e3d6000fd5b505050508080611f4690615286565b915050611e35565b506040518281527f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c90602001610fb6565b611f99828260405180602001604052806000815250614190565b5050565b60408051606081018252600080825260208201819052918101919091526000611fde8360405180608001604052806042815260200161561d604291396141f8565b600d5490915080612029576040518060600160405280611fff600754614228565b61ffff168152602001612013600754614228565b61ffff1681526000602090910152949350505050565b63ffffffff8216600d61203d6001846152ec565b8154811061204d5761204d61516d565b600091825260209091206002909102015463ffffffff16116120dc57600d6120766001836152ec565b815481106120865761208661516d565b6000918252602091829020604080516060810182526002939093029091016001015461ffff8082168452620100008204169383019390935264010000000090920463ffffffff1691810191909152949350505050565b8163ffffffff16600d6000815481106120f7576120f761516d565b600091825260209091206002909102015463ffffffff16111561212a576040518060600160405280611fff600754614228565b6000806121386001846152ec565b90505b8181111561222b576000600261215184846152ec565b61215b919061532c565b61216590836152ec565b90506000600d828154811061217c5761217c61516d565b60009182526020918290206040805180820182526002909302909101805463ffffffff9081168452825160608101845260019092015461ffff808216845262010000820416838701526401000000009004811692820192909252928201929092528051909250811690871614156121fc5760200151979650505050505050565b805163ffffffff8088169116101561221657819350612224565b6122216001836152ec565b92505b505061213b565b600d828154811061223e5761223e61516d565b6000918252602091829020604080516060810182526002939093029091016001015461ffff8082168452620100008204169383019390935264010000000090920463ffffffff16918101919091529695505050505050565b6000546001600160a01b031633146122c157604051633057182d60e21b815260040160405180910390fd5b60006122cc43611f9d565b90506117708261ffff16111561234a5760405162461bcd60e51b815260206004820152603f60248201527f46616e746f736944414f3a3a5f7365744d617851756f72756d566f746573425060448201527f533a20696e76616c6964206d61782071756f72756d20766f74657320627073006064820152608401610f73565b805161ffff808416911611156123d95760405162461bcd60e51b815260206004820152604860248201527f46616e746f736944414f3a3a5f7365744d617851756f72756d566f746573425060448201527f533a206d696e2071756f72756d20766f746573206270732067726561746572206064820152670e8d0c2dc40dac2f60c31b608482015260a401610f73565b60208101805161ffff84169091526123f082613c97565b6040805161ffff8084168252851660208201527f4bfb1235074b38f02e5cf8ba90f535905417c196a12654f65ee0584512d706429101611385565b3360008051602061565f8339815191528383612448848383613e83565b6040805193845260ff90921660208401526001600160601b03169082015260806060820181905260009082015260a00160405180910390a25050565b6124c5848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061419092505050565b50505050565b6000546001600160a01b031633146124f657604051633057182d60e21b815260040160405180910390fd5b600061250143611f9d565b905060c88261ffff161015801561251e57506107d08261ffff1611155b6125905760405162461bcd60e51b815260206004820152603f60248201527f46616e746f736944414f3a3a5f7365744d696e51756f72756d566f746573425060448201527f533a20696e76616c6964206d696e2071756f72756d20766f74657320627073006064820152608401610f73565b806020015161ffff168261ffff1611156126235760405162461bcd60e51b815260206004820152604860248201527f46616e746f736944414f3a3a5f7365744d696e51756f72756d566f746573425060448201527f533a206d696e2071756f72756d20766f746573206270732067726561746572206064820152670e8d0c2dc40dac2f60c31b608482015260a401610f73565b805161ffff8316825261263582613c97565b6040805161ffff8084168252851660208201527ffaeebe30d875e399189096ea49fea81bd41fe6dfc86ad3550639063219e607789101611385565b3360008051602061565f833981519152858561268d848383613e83565b86866040516126a095949392919061534e565b60405180910390a250505050565b60006119fd6126bc43611f9d565b6020015161ffff16600a60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119d4573d6000803e3d6000fd5b6000546001600160a01b0316331461274257604051633057182d60e21b815260040160405180910390fd5b6001811015801561275557506103e88111155b6127d15760405162461bcd60e51b815260206004820152604160248201527f46616e746f736944414f3a3a5f73657450726f706f73616c5468726573686f6c60448201527f643a20696e76616c69642070726f706f73616c207468726573686f6c642062706064820152607360f81b608482015260a401610f73565b600680549082905560408051828152602081018490527ffc216faa269bf440fb06aa490693f409461bde9cdcb949c7b9f2cb79589e7a589101610fb6565b6000808361281f8661271061539e565b612829919061532c565b90506000620f424082856040015163ffffffff16612847919061539e565b612851919061532c565b9050600081856000015161ffff1661286991906152d4565b9050600061287f866020015161ffff1683614251565b905061288b8188614177565b98975050505050505050565b600d81815481106128a757600080fd5b60009182526020918290206002919091020180546040805160608101825260019093015461ffff8082168552620100008204169484019490945263ffffffff64010000000090940484169083015291909116915082565b60006119fd600654600a60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119d4573d6000803e3d6000fd5b6000546001600160a01b031633146129c45760405162461bcd60e51b815260206004820152602860248201527f46616e746f736944414f3a3a5f73657450656e64696e6741646d696e3a2061646044820152676d696e206f6e6c7960c01b6064820152608401610f73565b600180546001600160a01b038381166001600160a01b03198316179092556040519116907fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a990610fb690839085906152a1565b6003546001600160a01b03163314612a815760405162461bcd60e51b815260206004820152602760248201527f46616e746f736944414f3a3a5f6275726e5665746f506f7765723a207665746f6044820152666572206f6e6c7960c81b6064820152608401610f73565b6003546040517fc5644f3588a066b15dcf6b636b74aadca57cfaccf608d9de7d8786364b7a8d0291612ac1916001600160a01b03909116906000906152a1565b60405180910390a1600380546001600160a01b0319169055600e546040517f7ad92e57a52c4e3e83ba624622b14e3a5efa0160dd6f9a7975c43ea66bad79ea9161145a916001600160a01b03909116906000906152a1565b6000805481906001600160a01b03163314612b4757604051633057182d60e21b815260040160405180910390fd5b6040514790600090339083908381818185875af1925050503d8060008114612b8b576040519150601f19603f3d011682016040523d82523d6000602084013e612b90565b606091505b50506040805184815282151560208201529192507f2aeb20ed0ead73e7bc740154a0b979547bc9e00691d84a700e6454ada9fe4679910160405180910390a190939092509050565b6003546001600160a01b03163314612c0357604051631387214760e01b815260040160405180910390fd5b600e546040517f7ad92e57a52c4e3e83ba624622b14e3a5efa0160dd6f9a7975c43ea66bad79ea91612c42916001600160a01b039091169084906152a1565b60405180910390a1600e80546001600160a01b0319166001600160a01b0392909216919091179055565b6000612ca06040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600a60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612cf3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d1791906152bb565b808252600654612d2691614177565b60208201819052600a546001600160a01b031663782d6fe133612d4a6001436152ec565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa158015612d93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db79190615303565b6001600160601b031611612e335760405162461bcd60e51b815260206004820152603c60248201527f46616e746f736944414f3a3a70726f706f73653a2070726f706f73657220766f60448201527f7465732062656c6f772070726f706f73616c207468726573686f6c64000000006064820152608401610f73565b85518751148015612e45575084518751145b8015612e52575083518751145b612ece5760405162461bcd60e51b815260206004820152604160248201527f46616e746f736944414f3a3a70726f706f73653a2070726f706f73616c20667560448201527f6e6374696f6e20696e666f726d6174696f6e206172697479206d69736d6174636064820152600d60fb1b608482015260a401610f73565b8651612f2e5760405162461bcd60e51b815260206004820152602960248201527f46616e746f736944414f3a3a70726f706f73653a206d7573742070726f7669646044820152686520616374696f6e7360b81b6064820152608401610f73565b600a87511115612f8e5760405162461bcd60e51b815260206004820152602560248201527f46616e746f736944414f3a3a70726f706f73653a20746f6f206d616e7920616360448201526474696f6e7360d81b6064820152608401610f73565b336000908152600c6020526040908190205490820181905215613132576000612fba8260400151611a02565b9050612fe4816040518060400160405280600681526020016541637469766560d01b815250613c3e565b156130755760405162461bcd60e51b815260206004820152605560248201527f46616e746f736944414f3a3a70726f706f73653a206f6e65206c69766520707260448201527f6f706f73616c207065722070726f706f7365722c20666f756e6420616e20616c6064820152741c9958591e481858dd1a5d99481c1c9bdc1bdcd85b605a1b608482015260a401610f73565b61309e816040518060400160405280600781526020016650656e64696e6760c81b815250613c3e565b156131305760405162461bcd60e51b815260206004820152605660248201527f46616e746f736944414f3a3a70726f706f73653a206f6e65206c69766520707260448201527f6f706f73616c207065722070726f706f7365722c20666f756e6420616e20616c6064820152751c9958591e481c195b991a5b99c81c1c9bdc1bdcd85b60521b608482015260a401610f73565b505b60045461313f90436152d4565b60608201819052600554613152916152d4565b60808201526008805490600061316783615286565b90915550506008546000818152600b6020908152604082209283556001830180546001600160a01b03191633179055838101516002840155600483019190915588516131bb916005840191908b019061452e565b5086516131d190600683019060208a019061458f565b5085516131e790600783019060208901906145ca565b5084516131fd9060088301906020880190614623565b50606082015160098201556080820151600a8201556000600b8201819055600c8201819055600d820155600e8101805462ffffff19169055815160108201554360118201558351613257906012830190602087019061467c565b50613263600854611a02565b805161327991601384019160209091019061467c565b50805460018201546001600160a01b03166000908152600c6020526040908190208290556009830154600a84015491517f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e0936132e393909233928e928e928e928e92908e906153bd565b60405180910390a17f6af0134faa0f9290c1d686d55012aca80302d31d5c856e4bc7954f7613dc7f878160000154338a8a8a8a876009015488600a0154896002015461332d61196b565b8e6040516133459b9a99989796959493929190615455565b60405180910390a154979650505050505050565b61338c61336582611a02565b6040518060400160405280600981526020016814dd58d8d95959195960ba1b815250613c3e565b151560011461340d5760405162461bcd60e51b815260206004820152604160248201527f46616e746f736944414f3a3a71756575653a2070726f706f73616c2063616e2060448201527f6f6e6c79206265207175657565642069662069742069732073756363656564656064820152601960fa1b608482015260a401610f73565b6000818152600b602090815260408083206009548251630d48571f60e31b815292519194936001600160a01b0390911692636a42b8f892600480830193928290030181865afa158015613464573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061348891906152bb565b61349290426152d4565b905060005b600583015481101561365c5761364a8360050182815481106134bb576134bb61516d565b6000918252602090912001546006850180546001600160a01b0390921691849081106134e9576134e961516d565b90600052602060002001548560070184815481106135095761350961516d565b90600052602060002001805461351e90615138565b80601f016020809104026020016040519081016040528092919081815260200182805461354a90615138565b80156135975780601f1061356c57610100808354040283529160200191613597565b820191906000526020600020905b81548152906001019060200180831161357a57829003601f168201915b50505050508660080185815481106135b1576135b161516d565b9060005260206000200180546135c690615138565b80601f01602080910402602001604051908101604052809291908181526020018280546135f290615138565b801561363f5780601f106136145761010080835404028352916020019161363f565b820191906000526020600020905b81548152906001019060200180831161362257829003601f168201915b505050505086614267565b8061365481615286565b915050613497565b506004820181905560408051848152602081018390527f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda28929101611385565b604080516060808201835260008083526020808401829052928401819052858152600b83528381206001600160a01b0386168252600f018352839020835191820184525460ff8082161515835261010082041692820192909252620100009091046001600160601b0316918101919091525b92915050565b6001546001600160a01b03163314801561372b57503315155b61378c5760405162461bcd60e51b815260206004820152602c60248201527f46616e746f736944414f3a3a5f61636365707441646d696e3a2070656e64696e60448201526b672061646d696e206f6e6c7960a01b6064820152608401610f73565b60008054600180546001600160a01b03198084166001600160a01b03838116918217909655911690915560405192909116917ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc906137ed90849084906152a1565b60405180910390a16001546040517fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a991610fb69184916001600160a01b0316906152a1565b6000546001600160a01b0316331461385d57604051633057182d60e21b815260040160405180910390fd5b60c88361ffff16108061387557506107d08361ffff16115b156138935760405163db8a74af60e01b815260040160405180910390fd5b6117708261ffff1611156138ba5760405163143abf4360e21b815260040160405180910390fd5b8161ffff168361ffff1611156138e3576040516362c564d560e11b815260040160405180910390fd5b60006138ee43611f9d565b9050600060405180606001604052808661ffff1681526020018561ffff1681526020018463ffffffff16815250905061392681613c97565b815181516040805161ffff93841681529290911660208301527ffaeebe30d875e399189096ea49fea81bd41fe6dfc86ad3550639063219e60778910160405180910390a17f4bfb1235074b38f02e5cf8ba90f535905417c196a12654f65ee0584512d70642826020015182602001516040516139b392919061ffff92831681529116602082015260400190565b60405180910390a160408083015182820151825163ffffffff9283168152911660208201527f5e3adb1066359dafa23c629f245d93543856115700821dcb4debc416f393c469910160405180910390a15050505050565b613a3a613a1682611a02565b60405180604001604052806006815260200165145d595d595960d21b815250613c3e565b1515600114613abc5760405162461bcd60e51b815260206004820152604260248201527f46616e746f736944414f3a3a657865637574653a2070726f706f73616c20636160448201527f6e206f6e6c792062652065786563757465642069662069742069732071756575606482015261195960f21b608482015260a401610f73565b6000818152600b60205260408120600e8101805462ff0000191662010000179055905b6005820154811015613c0d576009546005830180546001600160a01b0390921691630825f38f919084908110613b1757613b1761516d565b6000918252602090912001546006850180546001600160a01b039092169185908110613b4557613b4561516d565b9060005260206000200154856007018581548110613b6557613b6561516d565b90600052602060002001866008018681548110613b8457613b8461516d565b9060005260206000200187600401546040518663ffffffff1660e01b8152600401613bb3959493929190615224565b6000604051808303816000875af1158015613bd2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613bfa91908101906154fd565b5080613c0581615286565b915050613adf565b506040518281527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90602001610fb6565b600081604051602001613c519190615574565b6040516020818303038152906040528051906020012083604051602001613c789190615574565b6040516020818303038152906040528051906020012014905092915050565b6000613cd8436040518060400160405280601c81526020017f626c6f636b206e756d62657220657863656564732033322062697473000000008152506141f8565b600d549091508015801590613d25575063ffffffff8216600d613cfc6001846152ec565b81548110613d0c57613d0c61516d565b600091825260209091206002909102015463ffffffff16145b15613db25782600d613d386001846152ec565b81548110613d4857613d4861516d565b60009182526020918290208351600160029093029091019190910180549284015160409094015163ffffffff166401000000000267ffffffff000000001961ffff958616620100000263ffffffff1990951695909316949094179290921716919091179055505050565b60408051808201825263ffffffff80851682526020808301878152600d8054600181018255600091909152935160029094027fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb58101805495851663ffffffff19968716179055905180517fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb690920180549382015191909601519093166401000000000267ffffffff000000001961ffff94851662010000029390951693909116929092171791909116179055505050565b6000613eb5613e9184611a02565b6040518060400160405280600681526020016541637469766560d01b815250613c3e565b1515600114613f1d5760405162461bcd60e51b815260206004820152602e60248201527f46616e746f736944414f3a3a63617374566f7465496e7465726e616c3a20766f60448201526d1d1a5b99c81a5cc818db1bdcd95960921b6064820152608401610f73565b60028260ff161115613f895760405162461bcd60e51b815260206004820152602f60248201527f46616e746f736944414f3a3a63617374566f7465496e7465726e616c3a20696e60448201526e76616c696420766f7465207479706560881b6064820152608401610f73565b6000838152600b602090815260408083206001600160a01b0388168452600f8101909252909120805460ff161561401c5760405162461bcd60e51b815260206004820152603160248201527f46616e746f736944414f3a3a63617374566f7465496e7465726e616c3a20766f6044820152701d195c88185b1c9958591e481d9bdd1959607a1b6064820152608401610f73565b600a546000906001600160a01b031663782d6fe18861403a8661441b565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa158015614083573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140a79190615303565b905060ff85166140d457806001600160601b031683600c01546140ca91906152d4565b600c84015561412e565b8460ff166001141561410357806001600160601b031683600b01546140f991906152d4565b600b84015561412e565b8460ff166002141561412e57806001600160601b031683600d015461412891906152d4565b600d8401555b81546001600160601b03821662010000026dffffffffffffffffffffffff00001960ff88166101000261ffff199093169290921760011791909116179091559150509392505050565b6000612710614186848461539e565b610ffd919061532c565b60005a905060006141a2338686613e83565b9050336001600160a01b031660008051602061565f833981519152868684876040516141d19493929190615590565b60405180910390a26001600160601b038116156141f1576141f182614444565b5050505050565b60008163ffffffff8411156142205760405162461bcd60e51b8152600401610f7391906149c7565b509192915050565b600061ffff82111561424d5760405163555abf0160e11b815260040160405180910390fd5b5090565b60008183106142605781610ffd565b5090919050565b6009546040516001600160a01b039091169063f2b065379061429590889088908890889088906020016155c1565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016142c991815260200190565b602060405180830381865afa1580156142e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061430a91906155fa565b156143985760405162461bcd60e51b815260206004820152605260248201527f46616e746f736944414f3a3a71756575654f72526576657274496e7465726e6160448201527f6c3a206964656e746963616c2070726f706f73616c20616374696f6e20616c7260648201527165616479207175657565642061742065746160701b608482015260a401610f73565b600954604051633a66f90160e01b81526001600160a01b0390911690633a66f901906143d090889088908890889088906004016155c1565b6020604051808303816000875af11580156143ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061441391906152bb565b505050505050565b600081601101546000141561443c57600454826009015461370c91906152ec565b506011015490565b478061444e575050565b600061445f48642e90edd000614251565b905060006144733a63773594008401614251565b9050600061448a618ca05a87030162030d40614251565b9050600061449a82840286614251565b604051909150600090329083908381818185875af1925050503d80600081146144df576040519150601f19603f3d011682016040523d82523d6000602084013e6144e4565b606091505b505060408051848152821515602082015291925032917ffabef36fd46c4c3a6ad676521be5367a4dfdbf3faa68d8e826003b1752d68f4f910160405180910390a250505050505050565b828054828255906000526020600020908101928215614583579160200282015b8281111561458357825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061454e565b5061424d9291506146ef565b828054828255906000526020600020908101928215614583579160200282015b828111156145835782518255916020019190600101906145af565b828054828255906000526020600020908101928215614617579160200282015b82811115614617578251805161460791849160209091019061467c565b50916020019190600101906145ea565b5061424d929150614704565b828054828255906000526020600020908101928215614670579160200282015b82811115614670578251805161466091849160209091019061467c565b5091602001919060010190614643565b5061424d929150614721565b82805461468890615138565b90600052602060002090601f0160209004810192826146aa5760008555614583565b82601f106146c357805160ff1916838001178555614583565b8280016001018555821561458357918201828111156145835782518255916020019190600101906145af565b5b8082111561424d57600081556001016146f0565b8082111561424d576000614718828261473e565b50600101614704565b8082111561424d576000614735828261473e565b50600101614721565b50805461474a90615138565b6000825580601f1061475a575050565b601f01602090049060005260206000209081019061477891906146ef565b50565b60006020828403121561478d57600080fd5b5035919050565b600081518084526020808501945080840160005b838110156147cd5781516001600160a01b0316875295820195908201906001016147a8565b509495945050505050565b600081518084526020808501945080840160005b838110156147cd578151875295820195908201906001016147ec565b60005b8381101561482357818101518382015260200161480b565b838111156124c55750506000910152565b6000815180845261484c816020860160208601614808565b601f01601f19169290920160200192915050565b60208152815160208201526000602083015161488760408401826001600160a01b03169052565b506040830151606083015260608301516080830152608083015160a083015260a083015160c083015260c083015160e083015260e08301516101008181850152808501519150506101208181850152808501519150506101408181850152808501519150506101606148fc8185018315159052565b84015190506101806149118482018315159052565b84015190506101a06149268482018315159052565b8401516101c0848101919091528401516101e08085019190915284015161026061020080860182905291925090614961610280860184614794565b9250808601519050601f1961022081878603018188015261498285846147d8565b9450808801519250506102408187860301818801526149a18584614834565b9088015187820390920184880152935090506149bd8382614834565b9695505050505050565b602081526000610ffd6020830184614834565b80356001600160a01b03811681146149f157600080fd5b919050565b600060208284031215614a0857600080fd5b610ffd826149da565b803563ffffffff811681146149f157600080fd5b600060208284031215614a3757600080fd5b610ffd82614a11565b600081518084526020808501808196508360051b8101915082860160005b85811015614a88578284038952614a76848351614834565b98850198935090840190600101614a5e565b5091979650505050505050565b608081526000614aa86080830187614794565b8281036020840152614aba81876147d8565b90508281036040840152614ace8186614a40565b90508281036060840152614ae28185614a40565b979650505050505050565b803560ff811681146149f157600080fd5b600080600080600060a08688031215614b1657600080fd5b85359450614b2660208701614aed565b9350614b3460408701614aed565b94979396509394606081013594506080013592915050565b60008060408385031215614b5f57600080fd5b82359150614b6f60208401614aed565b90509250929050565b815161ffff90811682526020808401519091169082015260408083015163ffffffff16908201526060810161370c565b803561ffff811681146149f157600080fd5b600060208284031215614bcc57600080fd5b610ffd82614ba8565b60008060008060608587031215614beb57600080fd5b84359350614bfb60208601614aed565b9250604085013567ffffffffffffffff80821115614c1857600080fd5b818701915087601f830112614c2c57600080fd5b813581811115614c3b57600080fd5b886020828501011115614c4d57600080fd5b95989497505060200194505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715614c9b57614c9b614c5c565b604052919050565b600080600083850360a0811215614cb957600080fd5b84359350602085013592506060603f1982011215614cd657600080fd5b506040516060810181811067ffffffffffffffff82111715614cfa57614cfa614c5c565b8060405250614d0b60408601614ba8565b8152614d1960608601614ba8565b6020820152614d2a60808601614a11565b6040820152809150509250925092565b63ffffffff8316815260808101610ffd602083018461ffff8082511683528060208301511660208401525063ffffffff60408201511660408301525050565b600067ffffffffffffffff821115614d9357614d93614c5c565b5060051b60200190565b600082601f830112614dae57600080fd5b81356020614dc3614dbe83614d79565b614c72565b82815260059290921b84018101918181019086841115614de257600080fd5b8286015b84811015614e0457614df7816149da565b8352918301918301614de6565b509695505050505050565b600082601f830112614e2057600080fd5b81356020614e30614dbe83614d79565b82815260059290921b84018101918181019086841115614e4f57600080fd5b8286015b84811015614e045780358352918301918301614e53565b600067ffffffffffffffff821115614e8457614e84614c5c565b50601f01601f191660200190565b6000614ea0614dbe84614e6a565b9050828152838383011115614eb457600080fd5b828260208301376000602084830101529392505050565b600082601f830112614edc57600080fd5b610ffd83833560208501614e92565b600082601f830112614efc57600080fd5b81356020614f0c614dbe83614d79565b82815260059290921b84018101918181019086841115614f2b57600080fd5b8286015b84811015614e0457803567ffffffffffffffff811115614f4f5760008081fd5b614f5d8986838b0101614ecb565b845250918301918301614f2f565b600082601f830112614f7c57600080fd5b81356020614f8c614dbe83614d79565b82815260059290921b84018101918181019086841115614fab57600080fd5b8286015b84811015614e0457803567ffffffffffffffff811115614fcf5760008081fd5b8701603f81018913614fe15760008081fd5b614ff2898683013560408401614e92565b845250918301918301614faf565b600080600080600060a0868803121561501857600080fd5b853567ffffffffffffffff8082111561503057600080fd5b61503c89838a01614d9d565b9650602088013591508082111561505257600080fd5b61505e89838a01614e0f565b9550604088013591508082111561507457600080fd5b61508089838a01614eeb565b9450606088013591508082111561509657600080fd5b6150a289838a01614f6b565b935060808801359150808211156150b857600080fd5b506150c588828901614ecb565b9150509295509295909350565b600080604083850312156150e557600080fd5b82359150614b6f602084016149da565b60008060006060848603121561510a57600080fd5b61511384614ba8565b925061512160208501614ba8565b915061512f60408501614a11565b90509250925092565b600181811c9082168061514c57607f821691505b60208210811415611cc857634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c908083168061519d57607f831692505b60208084108214156151bf57634e487b7160e01b600052602260045260246000fd5b8388528180156151d657600181146151ea57615218565b60ff19861689830152604089019650615218565b876000528160002060005b868110156152105781548b82018501529085019083016151f5565b8a0183019750505b50505050505092915050565b60018060a01b038616815284602082015260a06040820152600061524b60a0830186615183565b828103606084015261525d8186615183565b9150508260808301529695505050505050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561529a5761529a615270565b5060010190565b6001600160a01b0392831681529116602082015260400190565b6000602082840312156152cd57600080fd5b5051919050565b600082198211156152e7576152e7615270565b500190565b6000828210156152fe576152fe615270565b500390565b60006020828403121561531557600080fd5b81516001600160601b0381168114610ffd57600080fd5b60008261534957634e487b7160e01b600052601260045260246000fd5b500490565b85815260ff851660208201526001600160601b038416604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b60008160001904831182151516156153b8576153b8615270565b500290565b8981526001600160a01b0389166020820152610120604082018190526000906153e88382018b614794565b905082810360608401526153fc818a6147d8565b905082810360808401526154108189614a40565b905082810360a08401526154248188614a40565b90508560c08401528460e08401528281036101008401526154458185614834565b9c9b505050505050505050505050565b8b81526001600160a01b038b166020820152610160604082018190526000906154808382018d614794565b90508281036060840152615494818c6147d8565b905082810360808401526154a8818b614a40565b905082810360a08401526154bc818a614a40565b90508760c08401528660e084015285610100840152846101208401528281036101408401526154eb8185614834565b9e9d5050505050505050505050505050565b60006020828403121561550f57600080fd5b815167ffffffffffffffff81111561552657600080fd5b8201601f8101841361553757600080fd5b8051615545614dbe82614e6a565b81815285602083850101111561555a57600080fd5b61556b826020830160208601614808565b95945050505050565b60008251615586818460208701614808565b9190910192915050565b84815260ff841660208201526001600160601b03831660408201526080606082015260006149bd6080830184614834565b60018060a01b038616815284602082015260a0604082015260006155e860a0830186614834565b828103606084015261525d8186614834565b60006020828403121561560c57600080fd5b81518015158114610ffd57600080fdfe46616e746f736944414f3a3a67657444796e616d696351756f72756d506172616d7341743a20626c6f636b206e756d62657220657863656564732033322062697473b8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4a26469706673582212201b5c88bfb8a937aaaa95023c45e733066516b18b9c4eda22e0d8fc770b886b3764736f6c634300080b0033",
  "devdoc": {
    "errors": {
      "AdminOnly()": [
        {
          "details": "Introduced these errors to reduce contract size, to avoid deployment failure"
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "_acceptAdmin()": {
        "details": "Admin function for pending admin to accept role and update admin"
      },
      "_burnVetoPower()": {
        "details": "Vetoer function destroying veto power forever"
      },
      "_setDynamicQuorumParams(uint16,uint16,uint32)": {
        "params": {
          "newMaxQuorumVotesBPS": "maximum quorum votes bps     Must be lower than `MAX_QUORUM_VOTES_BPS_UPPER_BOUND`     Must be higher than or equal to minQuorumVotesBPS",
          "newMinQuorumVotesBPS": "minimum quorum votes bps     Must be between `MIN_QUORUM_VOTES_BPS_LOWER_BOUND` and `MIN_QUORUM_VOTES_BPS_UPPER_BOUND`     Must be lower than or equal to maxQuorumVotesBPS",
          "newQuorumCoefficient": "the new coefficient, as a fixed point integer with 6 decimals"
        }
      },
      "_setMaxQuorumVotesBPS(uint16)": {
        "params": {
          "newMaxQuorumVotesBPS": "maximum quorum votes bps     Must be lower than `MAX_QUORUM_VOTES_BPS_UPPER_BOUND`     Must be higher than or equal to minQuorumVotesBPS"
        }
      },
      "_setMinQuorumVotesBPS(uint16)": {
        "params": {
          "newMinQuorumVotesBPS": "minimum quorum votes bps     Must be between `MIN_QUORUM_VOTES_BPS_LOWER_BOUND` and `MIN_QUORUM_VOTES_BPS_UPPER_BOUND`     Must be lower than or equal to maxQuorumVotesBPS"
        }
      },
      "_setPendingAdmin(address)": {
        "details": "Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.",
        "params": {
          "newPendingAdmin": "New pending admin."
        }
      },
      "_setPendingVetoer(address)": {
        "params": {
          "newPendingVetoer": "New Pending Vetoer"
        }
      },
      "_setProposalThresholdBPS(uint256)": {
        "details": "newProposalThresholdBPS must be greater than the hardcoded min",
        "params": {
          "newProposalThresholdBPS": "new proposal threshold"
        }
      },
      "_setQuorumCoefficient(uint32)": {
        "params": {
          "newQuorumCoefficient": "the new coefficient, as a fixed point integer with 6 decimals"
        }
      },
      "_setVotingDelay(uint256)": {
        "params": {
          "newVotingDelay": "new voting delay, in blocks"
        }
      },
      "_setVotingPeriod(uint256)": {
        "params": {
          "newVotingPeriod": "new voting period, in blocks"
        }
      },
      "cancel(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to cancel"
        }
      },
      "castRefundableVote(uint256,uint8)": {
        "details": "Reentrancy is defended against in `castVoteInternal` at the `receipt.hasVoted == false` require statement.",
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "castRefundableVoteWithReason(uint256,uint8,string)": {
        "details": "Reentrancy is defended against in `castVoteInternal` at the `receipt.hasVoted == false` require statement.",
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "reason": "The reason given for the vote by the voter",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "castVote(uint256,uint8)": {
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "details": "External function that accepts EIP-712 signatures for voting on proposals."
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "reason": "The reason given for the vote by the voter",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "constructor": {
        "params": {
          "dynamicQuorumParams_": "The initial dynamic quorum parameters",
          "fantosiToken_": "The address of the NOUN tokens",
          "proposalThresholdBPS_": "The initial proposal threshold in basis points",
          "timelock_": "The address of the FantosiDAOExecutor",
          "vetoer_": "The address allowed to unilaterally veto proposals",
          "votingDelay_": "The initial voting delay",
          "votingPeriod_": "The initial voting period"
        }
      },
      "dynamicQuorumVotes(uint256,uint256,(uint16,uint16,uint32))": {
        "details": "Note the coefficient is a fixed point integer with 6 decimals",
        "params": {
          "againstVotes": "Number of against-votes in the proposal",
          "params": "Configurable parameters for calculating the quorum based on againstVotes. See `DynamicQuorumParams` definition for additional details.",
          "totalSupply": "The total supply of Nouns at the time of proposal creation"
        },
        "returns": {
          "_0": "quorumVotes The required quorum"
        }
      },
      "execute(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to execute"
        }
      },
      "getActions(uint256)": {
        "params": {
          "proposalId": "the id of the proposal"
        },
        "returns": {
          "calldatas": "calldatas",
          "sendValues": "sendValues",
          "signatures": "signatures",
          "targets": "targets"
        }
      },
      "getDynamicQuorumParamsAt(uint256)": {
        "details": "The checkpoints array must not be empty, and the block number must be higher than or equal to     the block of the first checkpoint",
        "params": {
          "blockNumber_": "the block number to get the params at"
        },
        "returns": {
          "_0": "The dynamic quorum parameters that were set at the given block number"
        }
      },
      "getReceipt(uint256,address)": {
        "params": {
          "proposalId": "the id of proposal",
          "voter": "The address of the voter"
        },
        "returns": {
          "_0": "The voting receipt"
        }
      },
      "proposals(uint256)": {
        "params": {
          "proposalId": "the proposal id to get the data for"
        },
        "returns": {
          "_0": "A `ProposalCondensed` struct with the proposal data"
        }
      },
      "propose(address[],uint256[],string[],bytes[],string)": {
        "params": {
          "calldatas": "Calldatas for proposal calls",
          "description": "String description of the proposal",
          "sendValues": "Eth values for proposal calls",
          "signatures": "Function signatures for proposal calls",
          "targets": "Target addresses for proposal calls"
        },
        "returns": {
          "_0": "Proposal id of new proposal"
        }
      },
      "queue(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to queue"
        }
      },
      "state(uint256)": {
        "params": {
          "proposalId": "The id of the proposal"
        },
        "returns": {
          "_0": "Proposal state"
        }
      },
      "veto(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to veto"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "MaxQuorumVotesBPSSet(uint16,uint16)": {
        "notice": "Emitted when maxQuorumVotesBPS is set"
      },
      "MinQuorumVotesBPSSet(uint16,uint16)": {
        "notice": "Emitted when minQuorumVotesBPS is set"
      },
      "NewAdmin(address,address)": {
        "notice": "Emitted when pendingAdmin is accepted, which means admin is updated"
      },
      "NewImplementation(address,address)": {
        "notice": "Emitted when implementation is changed"
      },
      "NewPendingAdmin(address,address)": {
        "notice": "Emitted when pendingAdmin is changed"
      },
      "NewPendingVetoer(address,address)": {
        "notice": "Emitted when pendingVetoer is changed"
      },
      "NewVetoer(address,address)": {
        "notice": "Emitted when vetoer is changed"
      },
      "ProposalCanceled(uint256)": {
        "notice": "An event emitted when a proposal has been canceled"
      },
      "ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)": {
        "notice": "An event emitted when a new proposal is created"
      },
      "ProposalCreatedWithRequirements(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,uint256,uint256,string)": {
        "notice": "An event emitted when a new proposal is created, which includes additional information"
      },
      "ProposalExecuted(uint256)": {
        "notice": "An event emitted when a proposal has been executed in the FantosiDAOExecutor"
      },
      "ProposalQueued(uint256,uint256)": {
        "notice": "An event emitted when a proposal has been queued in the FantosiDAOExecutor"
      },
      "ProposalThresholdBPSSet(uint256,uint256)": {
        "notice": "Emitted when proposal threshold basis points is set"
      },
      "ProposalVetoed(uint256)": {
        "notice": "An event emitted when a proposal has been vetoed by vetoAddress"
      },
      "QuorumCoefficientSet(uint32,uint32)": {
        "notice": "Emitted when quorumCoefficient is set"
      },
      "QuorumVotesBPSSet(uint256,uint256)": {
        "notice": "Emitted when quorum votes basis points is set"
      },
      "RefundableVote(address,uint256,bool)": {
        "notice": "Emitted when a voter cast a vote requesting a gas refund."
      },
      "VoteCast(address,uint256,uint8,uint256,string)": {
        "notice": "An event emitted when a vote has been cast on a proposal"
      },
      "VotingDelaySet(uint256,uint256)": {
        "notice": "An event emitted when the voting delay is set"
      },
      "VotingPeriodSet(uint256,uint256)": {
        "notice": "An event emitted when the voting period is set"
      },
      "Withdraw(uint256,bool)": {
        "notice": "Emitted when admin withdraws the DAO's balance."
      }
    },
    "kind": "user",
    "methods": {
      "BALLOT_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the ballot struct used by the contract"
      },
      "DOMAIN_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the contract's domain"
      },
      "MAX_PROPOSAL_THRESHOLD_BPS()": {
        "notice": "The maximum setable proposal threshold"
      },
      "MAX_QUORUM_VOTES_BPS()": {
        "notice": "The maximum setable quorum votes basis points"
      },
      "MAX_QUORUM_VOTES_BPS_UPPER_BOUND()": {
        "notice": "The upper bound of maximum quorum votes basis points"
      },
      "MAX_REFUND_BASE_FEE()": {
        "notice": "The maximum basefee the DAO will refund voters on"
      },
      "MAX_REFUND_GAS_USED()": {
        "notice": "The maximum gas units the DAO will refund voters on; supports about 9,190 characters"
      },
      "MAX_REFUND_PRIORITY_FEE()": {
        "notice": "The maximum priority fee used to cap gas refunds in `castRefundableVote`"
      },
      "MAX_VOTING_DELAY()": {
        "notice": "The max setable voting delay"
      },
      "MAX_VOTING_PERIOD()": {
        "notice": "The max setable voting period"
      },
      "MIN_PROPOSAL_THRESHOLD_BPS()": {
        "notice": "The minimum setable proposal threshold"
      },
      "MIN_QUORUM_VOTES_BPS_LOWER_BOUND()": {
        "notice": "The lower bound of minimum quorum votes basis points"
      },
      "MIN_QUORUM_VOTES_BPS_UPPER_BOUND()": {
        "notice": "The upper bound of minimum quorum votes basis points"
      },
      "MIN_VOTING_DELAY()": {
        "notice": "The min setable voting delay"
      },
      "MIN_VOTING_PERIOD()": {
        "notice": "The minimum setable voting period"
      },
      "REFUND_BASE_GAS()": {
        "notice": "The vote refund gas overhead, including 7K for ETH transfer and 29K for general transaction overhead"
      },
      "_acceptAdmin()": {
        "notice": "Accepts transfer of admin rights. msg.sender must be pendingAdmin"
      },
      "_burnVetoPower()": {
        "notice": "Burns veto priviledges"
      },
      "_setDynamicQuorumParams(uint16,uint16,uint32)": {
        "notice": "Admin function for setting all the dynamic quorum parameters"
      },
      "_setMaxQuorumVotesBPS(uint16)": {
        "notice": "Admin function for setting the maximum quorum votes bps"
      },
      "_setMinQuorumVotesBPS(uint16)": {
        "notice": "Admin function for setting the minimum quorum votes bps"
      },
      "_setPendingAdmin(address)": {
        "notice": "Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer."
      },
      "_setPendingVetoer(address)": {
        "notice": "Begins transition of vetoer. The newPendingVetoer must call _acceptVetoer to finalize the transfer."
      },
      "_setProposalThresholdBPS(uint256)": {
        "notice": "Admin function for setting the proposal threshold basis points"
      },
      "_setQuorumCoefficient(uint32)": {
        "notice": "Admin function for setting the dynamic quorum coefficient"
      },
      "_setVotingDelay(uint256)": {
        "notice": "Admin function for setting the voting delay"
      },
      "_setVotingPeriod(uint256)": {
        "notice": "Admin function for setting the voting period"
      },
      "admin()": {
        "notice": "Administrator for this contract"
      },
      "cancel(uint256)": {
        "notice": "Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold"
      },
      "castRefundableVote(uint256,uint8)": {
        "notice": "Cast a vote for a proposal, asking the DAO to refund gas costs. Users with > 0 votes receive refunds. Refunds are partial when using a gas priority fee higher than the DAO's cap. Refunds are partial when the DAO's balance is insufficient. No refund is sent when the DAO's balance is empty. No refund is sent to users with no votes. Voting takes place regardless of refund success."
      },
      "castRefundableVoteWithReason(uint256,uint8,string)": {
        "notice": "Cast a vote for a proposal, asking the DAO to refund gas costs. Users with > 0 votes receive refunds. Refunds are partial when using a gas priority fee higher than the DAO's cap. Refunds are partial when the DAO's balance is insufficient. No refund is sent when the DAO's balance is empty. No refund is sent to users with no votes. Voting takes place regardless of refund success."
      },
      "castVote(uint256,uint8)": {
        "notice": "Cast a vote for a proposal"
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "notice": "Cast a vote for a proposal by signature"
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "notice": "Cast a vote for a proposal with a reason"
      },
      "constructor": {
        "notice": "Used to initialize the contract during delegator contructor"
      },
      "dynamicQuorumVotes(uint256,uint256,(uint16,uint16,uint32))": {
        "notice": "Calculates the required quorum of for-votes based on the amount of against-votes     The more against-votes there are for a proposal, the higher the required quorum is.     The quorum BPS is between `params.minQuorumVotesBPS` and params.maxQuorumVotesBPS.     The additional quorum is calculated as:       quorumCoefficient * againstVotesBPS"
      },
      "execute(uint256)": {
        "notice": "Executes a queued proposal if eta has passed"
      },
      "fantosiToken()": {
        "notice": "The address of the Nouns tokens"
      },
      "getActions(uint256)": {
        "notice": "Gets actions of a proposal"
      },
      "getDynamicQuorumParamsAt(uint256)": {
        "notice": "returns the dynamic quorum parameters values at a certain block number"
      },
      "getReceipt(uint256,address)": {
        "notice": "Gets the receipt for a voter on a given proposal"
      },
      "implementation()": {
        "notice": "Active brains of Governor"
      },
      "latestProposalIds(address)": {
        "notice": "The latest proposal for each proposer"
      },
      "maxQuorumVotes()": {
        "notice": "Current max quorum votes using Noun total supply"
      },
      "minQuorumVotes()": {
        "notice": "Current min quorum votes using Noun total supply"
      },
      "name()": {
        "notice": "The name of this contract"
      },
      "pendingAdmin()": {
        "notice": "Pending administrator for this contract"
      },
      "pendingVetoer()": {
        "notice": "Pending new vetoer"
      },
      "proposalCount()": {
        "notice": "The total number of proposals"
      },
      "proposalMaxOperations()": {
        "notice": "The maximum number of actions that can be included in a proposal"
      },
      "proposalThreshold()": {
        "notice": "Current proposal threshold using Noun Total Supply Differs from `GovernerBravo` which uses fixed amount"
      },
      "proposalThresholdBPS()": {
        "notice": "The basis point number of votes required in order for a voter to become a proposer. *DIFFERS from GovernerBravo"
      },
      "proposals(uint256)": {
        "notice": "Returns the proposal details given a proposal id.     The `quorumVotes` member holds the *current* quorum, given the current votes."
      },
      "propose(address[],uint256[],string[],bytes[],string)": {
        "notice": "Function used to propose a new proposal. Sender must have delegates above the proposal threshold"
      },
      "queue(uint256)": {
        "notice": "Queues a proposal of state succeeded"
      },
      "quorumVotes(uint256)": {
        "notice": "Quorum votes required for a specific proposal to succeed Differs from `GovernerBravo` which uses fixed amount"
      },
      "quorumVotesBPS()": {
        "notice": "The basis point number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed. *DIFFERS from GovernerBravo"
      },
      "state(uint256)": {
        "notice": "Gets the state of a proposal"
      },
      "timelock()": {
        "notice": "The address of the Nouns DAO Executor FantosiDAOExecutor"
      },
      "veto(uint256)": {
        "notice": "Vetoes a proposal only if sender is the vetoer and the proposal has not been executed."
      },
      "vetoer()": {
        "notice": "Vetoer who has the ability to veto any proposal"
      },
      "votingDelay()": {
        "notice": "The delay before voting on a proposal may take place, once proposed, in blocks"
      },
      "votingPeriod()": {
        "notice": "The duration of voting on a proposal, in blocks"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 14463,
        "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 14466,
        "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
        "label": "pendingAdmin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 14469,
        "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
        "label": "implementation",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 14599,
        "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
        "label": "vetoer",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 14602,
        "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
        "label": "votingDelay",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 14605,
        "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
        "label": "votingPeriod",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 14608,
        "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
        "label": "proposalThresholdBPS",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 14611,
        "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
        "label": "quorumVotesBPS",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 14614,
        "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
        "label": "proposalCount",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 14618,
        "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
        "label": "timelock",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(IFantosiDAOExecutor)14881"
      },
      {
        "astId": 14622,
        "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
        "label": "fantosiToken",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(FantosiTokenLike)14896"
      },
      {
        "astId": 14628,
        "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
        "label": "_proposals",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_struct(Proposal)14707_storage)"
      },
      {
        "astId": 14633,
        "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
        "label": "latestProposalIds",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 14735,
        "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
        "label": "quorumParamsCheckpoints",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_struct(DynamicQuorumParamsCheckpoint)14756_storage)dyn_storage"
      },
      {
        "astId": 14738,
        "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
        "label": "pendingVetoer",
        "offset": 0,
        "slot": "14",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(DynamicQuorumParamsCheckpoint)14756_storage)dyn_storage": {
        "base": "t_struct(DynamicQuorumParamsCheckpoint)14756_storage",
        "encoding": "dynamic_array",
        "label": "struct FantosiDAOStorageV2.DynamicQuorumParamsCheckpoint[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(FantosiTokenLike)14896": {
        "encoding": "inplace",
        "label": "contract FantosiTokenLike",
        "numberOfBytes": "20"
      },
      "t_contract(IFantosiDAOExecutor)14881": {
        "encoding": "inplace",
        "label": "contract IFantosiDAOExecutor",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)14717_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FantosiDAOStorageV1Adjusted.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)14717_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Proposal)14707_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FantosiDAOStorageV1Adjusted.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)14707_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(DynamicQuorumParams)14748_storage": {
        "encoding": "inplace",
        "label": "struct FantosiDAOStorageV2.DynamicQuorumParams",
        "members": [
          {
            "astId": 14741,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "minQuorumVotesBPS",
            "offset": 0,
            "slot": "0",
            "type": "t_uint16"
          },
          {
            "astId": 14744,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "maxQuorumVotesBPS",
            "offset": 2,
            "slot": "0",
            "type": "t_uint16"
          },
          {
            "astId": 14747,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "quorumCoefficient",
            "offset": 4,
            "slot": "0",
            "type": "t_uint32"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(DynamicQuorumParamsCheckpoint)14756_storage": {
        "encoding": "inplace",
        "label": "struct FantosiDAOStorageV2.DynamicQuorumParamsCheckpoint",
        "members": [
          {
            "astId": 14751,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "fromBlock",
            "offset": 0,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 14755,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "params",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(DynamicQuorumParams)14748_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Proposal)14707_storage": {
        "encoding": "inplace",
        "label": "struct FantosiDAOStorageV1Adjusted.Proposal",
        "members": [
          {
            "astId": 14636,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 14639,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 14642,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "proposalThreshold",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 14645,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "quorumVotes",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 14648,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "eta",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 14652,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "targets",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 14656,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "sendValues",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 14660,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "signatures",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 14664,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "calldatas",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 14667,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "startBlock",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 14670,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "endBlock",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 14673,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "forVotes",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 14676,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "againstVotes",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256"
          },
          {
            "astId": 14679,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "abstainVotes",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256"
          },
          {
            "astId": 14682,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "canceled",
            "offset": 0,
            "slot": "14",
            "type": "t_bool"
          },
          {
            "astId": 14685,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "vetoed",
            "offset": 1,
            "slot": "14",
            "type": "t_bool"
          },
          {
            "astId": 14688,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "executed",
            "offset": 2,
            "slot": "14",
            "type": "t_bool"
          },
          {
            "astId": 14694,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "receipts",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_struct(Receipt)14717_storage)"
          },
          {
            "astId": 14697,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "totalSupply",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256"
          },
          {
            "astId": 14700,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "creationBlock",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256"
          },
          {
            "astId": 14703,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "description",
            "offset": 0,
            "slot": "18",
            "type": "t_string_storage"
          },
          {
            "astId": 14706,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "state",
            "offset": 0,
            "slot": "19",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "640"
      },
      "t_struct(Receipt)14717_storage": {
        "encoding": "inplace",
        "label": "struct FantosiDAOStorageV1Adjusted.Receipt",
        "members": [
          {
            "astId": 14710,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 14713,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "support",
            "offset": 1,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 14716,
            "contract": "src/governance/FantosiDAOLogic.sol:FantosiDAOLogic",
            "label": "votes",
            "offset": 2,
            "slot": "0",
            "type": "t_uint96"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}